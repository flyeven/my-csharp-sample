#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace A0530_LINQ_SQL_Access
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	[Provider(typeof(System.Data.Linq.SqlClient.Sql2000Provider))]
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HR_Roster")]
	public partial class RosterDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertHR_BRANCH(HR_BRANCH instance);
    partial void UpdateHR_BRANCH(HR_BRANCH instance);
    partial void DeleteHR_BRANCH(HR_BRANCH instance);
    partial void InsertHR_STAFFSHIFTSHOP(HR_STAFFSHIFTSHOP instance);
    partial void UpdateHR_STAFFSHIFTSHOP(HR_STAFFSHIFTSHOP instance);
    partial void DeleteHR_STAFFSHIFTSHOP(HR_STAFFSHIFTSHOP instance);
    partial void InsertHR_BRANCHSHIFT(HR_BRANCHSHIFT instance);
    partial void UpdateHR_BRANCHSHIFT(HR_BRANCHSHIFT instance);
    partial void DeleteHR_BRANCHSHIFT(HR_BRANCHSHIFT instance);
    partial void InsertHR_PUBLICHOLIDAY(HR_PUBLICHOLIDAY instance);
    partial void UpdateHR_PUBLICHOLIDAY(HR_PUBLICHOLIDAY instance);
    partial void DeleteHR_PUBLICHOLIDAY(HR_PUBLICHOLIDAY instance);
    partial void InsertHR_PUBLICHOLIDAYSTAFF(HR_PUBLICHOLIDAYSTAFF instance);
    partial void UpdateHR_PUBLICHOLIDAYSTAFF(HR_PUBLICHOLIDAYSTAFF instance);
    partial void DeleteHR_PUBLICHOLIDAYSTAFF(HR_PUBLICHOLIDAYSTAFF instance);
    partial void InsertHR_ROSTERS(HR_ROSTERS instance);
    partial void UpdateHR_ROSTERS(HR_ROSTERS instance);
    partial void DeleteHR_ROSTERS(HR_ROSTERS instance);
    partial void InsertHR_STAFF(HR_STAFF instance);
    partial void UpdateHR_STAFF(HR_STAFF instance);
    partial void DeleteHR_STAFF(HR_STAFF instance);
    partial void InsertHR_STAFF_TITLE(HR_STAFF_TITLE instance);
    partial void UpdateHR_STAFF_TITLE(HR_STAFF_TITLE instance);
    partial void DeleteHR_STAFF_TITLE(HR_STAFF_TITLE instance);
    #endregion
		
		public RosterDataClassesDataContext() : 
				base(global::A0530_LINQ_SQL_Access.Properties.Settings.Default.HR_RosterConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RosterDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RosterDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RosterDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RosterDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<HR_BRANCH> HR_BRANCH
		{
			get
			{
				return this.GetTable<HR_BRANCH>();
			}
		}
		
		public System.Data.Linq.Table<HR_STAFFSHIFTSHOP> HR_STAFFSHIFTSHOP
		{
			get
			{
				return this.GetTable<HR_STAFFSHIFTSHOP>();
			}
		}
		
		public System.Data.Linq.Table<HR_BRANCHSHIFT> HR_BRANCHSHIFT
		{
			get
			{
				return this.GetTable<HR_BRANCHSHIFT>();
			}
		}
		
		public System.Data.Linq.Table<HR_PUBLICHOLIDAY> HR_PUBLICHOLIDAY
		{
			get
			{
				return this.GetTable<HR_PUBLICHOLIDAY>();
			}
		}
		
		public System.Data.Linq.Table<HR_PUBLICHOLIDAYSTAFF> HR_PUBLICHOLIDAYSTAFF
		{
			get
			{
				return this.GetTable<HR_PUBLICHOLIDAYSTAFF>();
			}
		}
		
		public System.Data.Linq.Table<HR_ROSTERS> HR_ROSTERS
		{
			get
			{
				return this.GetTable<HR_ROSTERS>();
			}
		}
		
		public System.Data.Linq.Table<HR_STAFF> HR_STAFF
		{
			get
			{
				return this.GetTable<HR_STAFF>();
			}
		}
		
		public System.Data.Linq.Table<HR_STAFF_TITLE> HR_STAFF_TITLE
		{
			get
			{
				return this.GetTable<HR_STAFF_TITLE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="HR_BRANCH")]
	public partial class HR_BRANCH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BRANCH_CODE;
		
		private string _BRANCH_NAME_CHI;
		
		private string _BRANCH_NAME_ENG;
		
		private System.Nullable<System.DateTime> _BRANCH_CREATEDATE;
		
		private string _BRANCH_STATUS;
		
		private EntitySet<HR_STAFFSHIFTSHOP> _HR_STAFFSHIFTSHOP;
		
		private EntitySet<HR_BRANCHSHIFT> _HR_BRANCHSHIFT;
		
		private EntitySet<HR_ROSTERS> _HR_ROSTERS;
		
		private EntitySet<HR_STAFF> _HR_STAFF;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBRANCH_CODEChanging(string value);
    partial void OnBRANCH_CODEChanged();
    partial void OnBRANCH_NAME_CHIChanging(string value);
    partial void OnBRANCH_NAME_CHIChanged();
    partial void OnBRANCH_NAME_ENGChanging(string value);
    partial void OnBRANCH_NAME_ENGChanged();
    partial void OnBRANCH_CREATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnBRANCH_CREATEDATEChanged();
    partial void OnBRANCH_STATUSChanging(string value);
    partial void OnBRANCH_STATUSChanged();
    #endregion
		
		public HR_BRANCH()
		{
			this._HR_STAFFSHIFTSHOP = new EntitySet<HR_STAFFSHIFTSHOP>(new Action<HR_STAFFSHIFTSHOP>(this.attach_HR_STAFFSHIFTSHOP), new Action<HR_STAFFSHIFTSHOP>(this.detach_HR_STAFFSHIFTSHOP));
			this._HR_BRANCHSHIFT = new EntitySet<HR_BRANCHSHIFT>(new Action<HR_BRANCHSHIFT>(this.attach_HR_BRANCHSHIFT), new Action<HR_BRANCHSHIFT>(this.detach_HR_BRANCHSHIFT));
			this._HR_ROSTERS = new EntitySet<HR_ROSTERS>(new Action<HR_ROSTERS>(this.attach_HR_ROSTERS), new Action<HR_ROSTERS>(this.detach_HR_ROSTERS));
			this._HR_STAFF = new EntitySet<HR_STAFF>(new Action<HR_STAFF>(this.attach_HR_STAFF), new Action<HR_STAFF>(this.detach_HR_STAFF));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCH_CODE", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BRANCH_CODE
		{
			get
			{
				return this._BRANCH_CODE;
			}
			set
			{
				if ((this._BRANCH_CODE != value))
				{
					this.OnBRANCH_CODEChanging(value);
					this.SendPropertyChanging();
					this._BRANCH_CODE = value;
					this.SendPropertyChanged("BRANCH_CODE");
					this.OnBRANCH_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCH_NAME_CHI", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BRANCH_NAME_CHI
		{
			get
			{
				return this._BRANCH_NAME_CHI;
			}
			set
			{
				if ((this._BRANCH_NAME_CHI != value))
				{
					this.OnBRANCH_NAME_CHIChanging(value);
					this.SendPropertyChanging();
					this._BRANCH_NAME_CHI = value;
					this.SendPropertyChanged("BRANCH_NAME_CHI");
					this.OnBRANCH_NAME_CHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCH_NAME_ENG", DbType="VarChar(100)")]
		public string BRANCH_NAME_ENG
		{
			get
			{
				return this._BRANCH_NAME_ENG;
			}
			set
			{
				if ((this._BRANCH_NAME_ENG != value))
				{
					this.OnBRANCH_NAME_ENGChanging(value);
					this.SendPropertyChanging();
					this._BRANCH_NAME_ENG = value;
					this.SendPropertyChanged("BRANCH_NAME_ENG");
					this.OnBRANCH_NAME_ENGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCH_CREATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> BRANCH_CREATEDATE
		{
			get
			{
				return this._BRANCH_CREATEDATE;
			}
			set
			{
				if ((this._BRANCH_CREATEDATE != value))
				{
					this.OnBRANCH_CREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._BRANCH_CREATEDATE = value;
					this.SendPropertyChanged("BRANCH_CREATEDATE");
					this.OnBRANCH_CREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCH_STATUS", DbType="VarChar(10)")]
		public string BRANCH_STATUS
		{
			get
			{
				return this._BRANCH_STATUS;
			}
			set
			{
				if ((this._BRANCH_STATUS != value))
				{
					this.OnBRANCH_STATUSChanging(value);
					this.SendPropertyChanging();
					this._BRANCH_STATUS = value;
					this.SendPropertyChanged("BRANCH_STATUS");
					this.OnBRANCH_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_BRANCH_HR_STAFFSHIFTSHOP", Storage="_HR_STAFFSHIFTSHOP", ThisKey="BRANCH_CODE", OtherKey="BRANCH_CODE")]
		public EntitySet<HR_STAFFSHIFTSHOP> HR_STAFFSHIFTSHOP
		{
			get
			{
				return this._HR_STAFFSHIFTSHOP;
			}
			set
			{
				this._HR_STAFFSHIFTSHOP.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_BRANCH_HR_BRANCHSHIFT", Storage="_HR_BRANCHSHIFT", ThisKey="BRANCH_CODE", OtherKey="BRANCH_CODE")]
		public EntitySet<HR_BRANCHSHIFT> HR_BRANCHSHIFT
		{
			get
			{
				return this._HR_BRANCHSHIFT;
			}
			set
			{
				this._HR_BRANCHSHIFT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_BRANCH_HR_ROSTERS", Storage="_HR_ROSTERS", ThisKey="BRANCH_CODE", OtherKey="BRANCH_CODE")]
		public EntitySet<HR_ROSTERS> HR_ROSTERS
		{
			get
			{
				return this._HR_ROSTERS;
			}
			set
			{
				this._HR_ROSTERS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_BRANCH_HR_STAFF", Storage="_HR_STAFF", ThisKey="BRANCH_CODE", OtherKey="BRANCH_CODE")]
		public EntitySet<HR_STAFF> HR_STAFF
		{
			get
			{
				return this._HR_STAFF;
			}
			set
			{
				this._HR_STAFF.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HR_STAFFSHIFTSHOP(HR_STAFFSHIFTSHOP entity)
		{
			this.SendPropertyChanging();
			entity.HR_BRANCH = this;
		}
		
		private void detach_HR_STAFFSHIFTSHOP(HR_STAFFSHIFTSHOP entity)
		{
			this.SendPropertyChanging();
			entity.HR_BRANCH = null;
		}
		
		private void attach_HR_BRANCHSHIFT(HR_BRANCHSHIFT entity)
		{
			this.SendPropertyChanging();
			entity.HR_BRANCH = this;
		}
		
		private void detach_HR_BRANCHSHIFT(HR_BRANCHSHIFT entity)
		{
			this.SendPropertyChanging();
			entity.HR_BRANCH = null;
		}
		
		private void attach_HR_ROSTERS(HR_ROSTERS entity)
		{
			this.SendPropertyChanging();
			entity.HR_BRANCH = this;
		}
		
		private void detach_HR_ROSTERS(HR_ROSTERS entity)
		{
			this.SendPropertyChanging();
			entity.HR_BRANCH = null;
		}
		
		private void attach_HR_STAFF(HR_STAFF entity)
		{
			this.SendPropertyChanging();
			entity.HR_BRANCH = this;
		}
		
		private void detach_HR_STAFF(HR_STAFF entity)
		{
			this.SendPropertyChanging();
			entity.HR_BRANCH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="HR_STAFFSHIFTSHOP")]
	public partial class HR_STAFFSHIFTSHOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STAFFSHIFTSHOP_ID;
		
		private string _STAFF_CODE;
		
		private string _BRANCH_CODE;
		
		private System.DateTime _START_SHIFT;
		
		private System.DateTime _END_SHIFT;
		
		private EntityRef<HR_BRANCH> _HR_BRANCH;
		
		private EntityRef<HR_STAFF> _HR_STAFF;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTAFFSHIFTSHOP_IDChanging(int value);
    partial void OnSTAFFSHIFTSHOP_IDChanged();
    partial void OnSTAFF_CODEChanging(string value);
    partial void OnSTAFF_CODEChanged();
    partial void OnBRANCH_CODEChanging(string value);
    partial void OnBRANCH_CODEChanged();
    partial void OnSTART_SHIFTChanging(System.DateTime value);
    partial void OnSTART_SHIFTChanged();
    partial void OnEND_SHIFTChanging(System.DateTime value);
    partial void OnEND_SHIFTChanged();
    #endregion
		
		public HR_STAFFSHIFTSHOP()
		{
			this._HR_BRANCH = default(EntityRef<HR_BRANCH>);
			this._HR_STAFF = default(EntityRef<HR_STAFF>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAFFSHIFTSHOP_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STAFFSHIFTSHOP_ID
		{
			get
			{
				return this._STAFFSHIFTSHOP_ID;
			}
			set
			{
				if ((this._STAFFSHIFTSHOP_ID != value))
				{
					this.OnSTAFFSHIFTSHOP_IDChanging(value);
					this.SendPropertyChanging();
					this._STAFFSHIFTSHOP_ID = value;
					this.SendPropertyChanged("STAFFSHIFTSHOP_ID");
					this.OnSTAFFSHIFTSHOP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAFF_CODE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string STAFF_CODE
		{
			get
			{
				return this._STAFF_CODE;
			}
			set
			{
				if ((this._STAFF_CODE != value))
				{
					if (this._HR_STAFF.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTAFF_CODEChanging(value);
					this.SendPropertyChanging();
					this._STAFF_CODE = value;
					this.SendPropertyChanged("STAFF_CODE");
					this.OnSTAFF_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCH_CODE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string BRANCH_CODE
		{
			get
			{
				return this._BRANCH_CODE;
			}
			set
			{
				if ((this._BRANCH_CODE != value))
				{
					if (this._HR_BRANCH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBRANCH_CODEChanging(value);
					this.SendPropertyChanging();
					this._BRANCH_CODE = value;
					this.SendPropertyChanged("BRANCH_CODE");
					this.OnBRANCH_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_START_SHIFT", DbType="DateTime NOT NULL")]
		public System.DateTime START_SHIFT
		{
			get
			{
				return this._START_SHIFT;
			}
			set
			{
				if ((this._START_SHIFT != value))
				{
					this.OnSTART_SHIFTChanging(value);
					this.SendPropertyChanging();
					this._START_SHIFT = value;
					this.SendPropertyChanged("START_SHIFT");
					this.OnSTART_SHIFTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_END_SHIFT", DbType="DateTime NOT NULL")]
		public System.DateTime END_SHIFT
		{
			get
			{
				return this._END_SHIFT;
			}
			set
			{
				if ((this._END_SHIFT != value))
				{
					this.OnEND_SHIFTChanging(value);
					this.SendPropertyChanging();
					this._END_SHIFT = value;
					this.SendPropertyChanged("END_SHIFT");
					this.OnEND_SHIFTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_BRANCH_HR_STAFFSHIFTSHOP", Storage="_HR_BRANCH", ThisKey="BRANCH_CODE", OtherKey="BRANCH_CODE", IsForeignKey=true)]
		public HR_BRANCH HR_BRANCH
		{
			get
			{
				return this._HR_BRANCH.Entity;
			}
			set
			{
				HR_BRANCH previousValue = this._HR_BRANCH.Entity;
				if (((previousValue != value) 
							|| (this._HR_BRANCH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_BRANCH.Entity = null;
						previousValue.HR_STAFFSHIFTSHOP.Remove(this);
					}
					this._HR_BRANCH.Entity = value;
					if ((value != null))
					{
						value.HR_STAFFSHIFTSHOP.Add(this);
						this._BRANCH_CODE = value.BRANCH_CODE;
					}
					else
					{
						this._BRANCH_CODE = default(string);
					}
					this.SendPropertyChanged("HR_BRANCH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_STAFF_HR_STAFFSHIFTSHOP", Storage="_HR_STAFF", ThisKey="STAFF_CODE", OtherKey="STAFF_CODE", IsForeignKey=true)]
		public HR_STAFF HR_STAFF
		{
			get
			{
				return this._HR_STAFF.Entity;
			}
			set
			{
				HR_STAFF previousValue = this._HR_STAFF.Entity;
				if (((previousValue != value) 
							|| (this._HR_STAFF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_STAFF.Entity = null;
						previousValue.HR_STAFFSHIFTSHOP.Remove(this);
					}
					this._HR_STAFF.Entity = value;
					if ((value != null))
					{
						value.HR_STAFFSHIFTSHOP.Add(this);
						this._STAFF_CODE = value.STAFF_CODE;
					}
					else
					{
						this._STAFF_CODE = default(string);
					}
					this.SendPropertyChanged("HR_STAFF");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="HR_BRANCHSHIFT")]
	public partial class HR_BRANCHSHIFT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BRANCHSHIFT_CODE;
		
		private string _BRANCH_CODE;
		
		private string _BRANCHSHIFT_SHIFTNAME;
		
		private string _BRANCHSHIFT_STARTTIME;
		
		private string _BRANCHSHIFT_ENDTIME;
		
		private System.DateTime _BRANCHSHIFT_STARTDATE;
		
		private System.Nullable<System.DateTime> _BRANCHSHIFT_ENDDATE;
		
		private EntitySet<HR_ROSTERS> _HR_ROSTERS;
		
		private EntityRef<HR_BRANCH> _HR_BRANCH;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBRANCHSHIFT_CODEChanging(string value);
    partial void OnBRANCHSHIFT_CODEChanged();
    partial void OnBRANCH_CODEChanging(string value);
    partial void OnBRANCH_CODEChanged();
    partial void OnBRANCHSHIFT_SHIFTNAMEChanging(string value);
    partial void OnBRANCHSHIFT_SHIFTNAMEChanged();
    partial void OnBRANCHSHIFT_STARTTIMEChanging(string value);
    partial void OnBRANCHSHIFT_STARTTIMEChanged();
    partial void OnBRANCHSHIFT_ENDTIMEChanging(string value);
    partial void OnBRANCHSHIFT_ENDTIMEChanged();
    partial void OnBRANCHSHIFT_STARTDATEChanging(System.DateTime value);
    partial void OnBRANCHSHIFT_STARTDATEChanged();
    partial void OnBRANCHSHIFT_ENDDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnBRANCHSHIFT_ENDDATEChanged();
    #endregion
		
		public HR_BRANCHSHIFT()
		{
			this._HR_ROSTERS = new EntitySet<HR_ROSTERS>(new Action<HR_ROSTERS>(this.attach_HR_ROSTERS), new Action<HR_ROSTERS>(this.detach_HR_ROSTERS));
			this._HR_BRANCH = default(EntityRef<HR_BRANCH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCHSHIFT_CODE", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BRANCHSHIFT_CODE
		{
			get
			{
				return this._BRANCHSHIFT_CODE;
			}
			set
			{
				if ((this._BRANCHSHIFT_CODE != value))
				{
					this.OnBRANCHSHIFT_CODEChanging(value);
					this.SendPropertyChanging();
					this._BRANCHSHIFT_CODE = value;
					this.SendPropertyChanged("BRANCHSHIFT_CODE");
					this.OnBRANCHSHIFT_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCH_CODE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string BRANCH_CODE
		{
			get
			{
				return this._BRANCH_CODE;
			}
			set
			{
				if ((this._BRANCH_CODE != value))
				{
					if (this._HR_BRANCH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBRANCH_CODEChanging(value);
					this.SendPropertyChanging();
					this._BRANCH_CODE = value;
					this.SendPropertyChanged("BRANCH_CODE");
					this.OnBRANCH_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCHSHIFT_SHIFTNAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string BRANCHSHIFT_SHIFTNAME
		{
			get
			{
				return this._BRANCHSHIFT_SHIFTNAME;
			}
			set
			{
				if ((this._BRANCHSHIFT_SHIFTNAME != value))
				{
					this.OnBRANCHSHIFT_SHIFTNAMEChanging(value);
					this.SendPropertyChanging();
					this._BRANCHSHIFT_SHIFTNAME = value;
					this.SendPropertyChanged("BRANCHSHIFT_SHIFTNAME");
					this.OnBRANCHSHIFT_SHIFTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCHSHIFT_STARTTIME", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string BRANCHSHIFT_STARTTIME
		{
			get
			{
				return this._BRANCHSHIFT_STARTTIME;
			}
			set
			{
				if ((this._BRANCHSHIFT_STARTTIME != value))
				{
					this.OnBRANCHSHIFT_STARTTIMEChanging(value);
					this.SendPropertyChanging();
					this._BRANCHSHIFT_STARTTIME = value;
					this.SendPropertyChanged("BRANCHSHIFT_STARTTIME");
					this.OnBRANCHSHIFT_STARTTIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCHSHIFT_ENDTIME", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string BRANCHSHIFT_ENDTIME
		{
			get
			{
				return this._BRANCHSHIFT_ENDTIME;
			}
			set
			{
				if ((this._BRANCHSHIFT_ENDTIME != value))
				{
					this.OnBRANCHSHIFT_ENDTIMEChanging(value);
					this.SendPropertyChanging();
					this._BRANCHSHIFT_ENDTIME = value;
					this.SendPropertyChanged("BRANCHSHIFT_ENDTIME");
					this.OnBRANCHSHIFT_ENDTIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCHSHIFT_STARTDATE", DbType="DateTime NOT NULL")]
		public System.DateTime BRANCHSHIFT_STARTDATE
		{
			get
			{
				return this._BRANCHSHIFT_STARTDATE;
			}
			set
			{
				if ((this._BRANCHSHIFT_STARTDATE != value))
				{
					this.OnBRANCHSHIFT_STARTDATEChanging(value);
					this.SendPropertyChanging();
					this._BRANCHSHIFT_STARTDATE = value;
					this.SendPropertyChanged("BRANCHSHIFT_STARTDATE");
					this.OnBRANCHSHIFT_STARTDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCHSHIFT_ENDDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> BRANCHSHIFT_ENDDATE
		{
			get
			{
				return this._BRANCHSHIFT_ENDDATE;
			}
			set
			{
				if ((this._BRANCHSHIFT_ENDDATE != value))
				{
					this.OnBRANCHSHIFT_ENDDATEChanging(value);
					this.SendPropertyChanging();
					this._BRANCHSHIFT_ENDDATE = value;
					this.SendPropertyChanged("BRANCHSHIFT_ENDDATE");
					this.OnBRANCHSHIFT_ENDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_BRANCHSHIFT_HR_ROSTERS", Storage="_HR_ROSTERS", ThisKey="BRANCHSHIFT_CODE", OtherKey="BRANCHSHIFT_CODE")]
		public EntitySet<HR_ROSTERS> HR_ROSTERS
		{
			get
			{
				return this._HR_ROSTERS;
			}
			set
			{
				this._HR_ROSTERS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_BRANCH_HR_BRANCHSHIFT", Storage="_HR_BRANCH", ThisKey="BRANCH_CODE", OtherKey="BRANCH_CODE", IsForeignKey=true)]
		public HR_BRANCH HR_BRANCH
		{
			get
			{
				return this._HR_BRANCH.Entity;
			}
			set
			{
				HR_BRANCH previousValue = this._HR_BRANCH.Entity;
				if (((previousValue != value) 
							|| (this._HR_BRANCH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_BRANCH.Entity = null;
						previousValue.HR_BRANCHSHIFT.Remove(this);
					}
					this._HR_BRANCH.Entity = value;
					if ((value != null))
					{
						value.HR_BRANCHSHIFT.Add(this);
						this._BRANCH_CODE = value.BRANCH_CODE;
					}
					else
					{
						this._BRANCH_CODE = default(string);
					}
					this.SendPropertyChanged("HR_BRANCH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HR_ROSTERS(HR_ROSTERS entity)
		{
			this.SendPropertyChanging();
			entity.HR_BRANCHSHIFT = this;
		}
		
		private void detach_HR_ROSTERS(HR_ROSTERS entity)
		{
			this.SendPropertyChanging();
			entity.HR_BRANCHSHIFT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="HR_PUBLICHOLIDAY")]
	public partial class HR_PUBLICHOLIDAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PUBLICHOLIDAY_CODE;
		
		private System.DateTime _PUBLICHOLIDAY_DATE;
		
		private string _PUBLICHOLIDAY_NAME_CHI;
		
		private string _PUBLICHOLIDAY_NAME_ENG;
		
		private EntitySet<HR_PUBLICHOLIDAYSTAFF> _HR_PUBLICHOLIDAYSTAFF;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPUBLICHOLIDAY_CODEChanging(string value);
    partial void OnPUBLICHOLIDAY_CODEChanged();
    partial void OnPUBLICHOLIDAY_DATEChanging(System.DateTime value);
    partial void OnPUBLICHOLIDAY_DATEChanged();
    partial void OnPUBLICHOLIDAY_NAME_CHIChanging(string value);
    partial void OnPUBLICHOLIDAY_NAME_CHIChanged();
    partial void OnPUBLICHOLIDAY_NAME_ENGChanging(string value);
    partial void OnPUBLICHOLIDAY_NAME_ENGChanged();
    #endregion
		
		public HR_PUBLICHOLIDAY()
		{
			this._HR_PUBLICHOLIDAYSTAFF = new EntitySet<HR_PUBLICHOLIDAYSTAFF>(new Action<HR_PUBLICHOLIDAYSTAFF>(this.attach_HR_PUBLICHOLIDAYSTAFF), new Action<HR_PUBLICHOLIDAYSTAFF>(this.detach_HR_PUBLICHOLIDAYSTAFF));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUBLICHOLIDAY_CODE", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PUBLICHOLIDAY_CODE
		{
			get
			{
				return this._PUBLICHOLIDAY_CODE;
			}
			set
			{
				if ((this._PUBLICHOLIDAY_CODE != value))
				{
					this.OnPUBLICHOLIDAY_CODEChanging(value);
					this.SendPropertyChanging();
					this._PUBLICHOLIDAY_CODE = value;
					this.SendPropertyChanged("PUBLICHOLIDAY_CODE");
					this.OnPUBLICHOLIDAY_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUBLICHOLIDAY_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime PUBLICHOLIDAY_DATE
		{
			get
			{
				return this._PUBLICHOLIDAY_DATE;
			}
			set
			{
				if ((this._PUBLICHOLIDAY_DATE != value))
				{
					this.OnPUBLICHOLIDAY_DATEChanging(value);
					this.SendPropertyChanging();
					this._PUBLICHOLIDAY_DATE = value;
					this.SendPropertyChanged("PUBLICHOLIDAY_DATE");
					this.OnPUBLICHOLIDAY_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUBLICHOLIDAY_NAME_CHI", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PUBLICHOLIDAY_NAME_CHI
		{
			get
			{
				return this._PUBLICHOLIDAY_NAME_CHI;
			}
			set
			{
				if ((this._PUBLICHOLIDAY_NAME_CHI != value))
				{
					this.OnPUBLICHOLIDAY_NAME_CHIChanging(value);
					this.SendPropertyChanging();
					this._PUBLICHOLIDAY_NAME_CHI = value;
					this.SendPropertyChanged("PUBLICHOLIDAY_NAME_CHI");
					this.OnPUBLICHOLIDAY_NAME_CHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUBLICHOLIDAY_NAME_ENG", DbType="VarChar(100)")]
		public string PUBLICHOLIDAY_NAME_ENG
		{
			get
			{
				return this._PUBLICHOLIDAY_NAME_ENG;
			}
			set
			{
				if ((this._PUBLICHOLIDAY_NAME_ENG != value))
				{
					this.OnPUBLICHOLIDAY_NAME_ENGChanging(value);
					this.SendPropertyChanging();
					this._PUBLICHOLIDAY_NAME_ENG = value;
					this.SendPropertyChanged("PUBLICHOLIDAY_NAME_ENG");
					this.OnPUBLICHOLIDAY_NAME_ENGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_PUBLICHOLIDAY_HR_PUBLICHOLIDAYSTAFF", Storage="_HR_PUBLICHOLIDAYSTAFF", ThisKey="PUBLICHOLIDAY_CODE", OtherKey="PUBLICHOLIDAY_CODE")]
		public EntitySet<HR_PUBLICHOLIDAYSTAFF> HR_PUBLICHOLIDAYSTAFF
		{
			get
			{
				return this._HR_PUBLICHOLIDAYSTAFF;
			}
			set
			{
				this._HR_PUBLICHOLIDAYSTAFF.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HR_PUBLICHOLIDAYSTAFF(HR_PUBLICHOLIDAYSTAFF entity)
		{
			this.SendPropertyChanging();
			entity.HR_PUBLICHOLIDAY = this;
		}
		
		private void detach_HR_PUBLICHOLIDAYSTAFF(HR_PUBLICHOLIDAYSTAFF entity)
		{
			this.SendPropertyChanging();
			entity.HR_PUBLICHOLIDAY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="HR_PUBLICHOLIDAYSTAFF")]
	public partial class HR_PUBLICHOLIDAYSTAFF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _STAFF_CODE;
		
		private string _PUBLICHOLIDAY_CODE;
		
		private System.Nullable<System.DateTime> _PUBLICHOLIDAY_DATE;
		
		private System.Nullable<System.DateTime> _STAFF_USE_DATE;
		
		private System.Nullable<short> _REQUEST_FLAG;
		
		private EntityRef<HR_PUBLICHOLIDAY> _HR_PUBLICHOLIDAY;
		
		private EntityRef<HR_STAFF> _HR_STAFF;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTAFF_CODEChanging(string value);
    partial void OnSTAFF_CODEChanged();
    partial void OnPUBLICHOLIDAY_CODEChanging(string value);
    partial void OnPUBLICHOLIDAY_CODEChanged();
    partial void OnPUBLICHOLIDAY_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnPUBLICHOLIDAY_DATEChanged();
    partial void OnSTAFF_USE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnSTAFF_USE_DATEChanged();
    partial void OnREQUEST_FLAGChanging(System.Nullable<short> value);
    partial void OnREQUEST_FLAGChanged();
    #endregion
		
		public HR_PUBLICHOLIDAYSTAFF()
		{
			this._HR_PUBLICHOLIDAY = default(EntityRef<HR_PUBLICHOLIDAY>);
			this._HR_STAFF = default(EntityRef<HR_STAFF>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAFF_CODE", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string STAFF_CODE
		{
			get
			{
				return this._STAFF_CODE;
			}
			set
			{
				if ((this._STAFF_CODE != value))
				{
					if (this._HR_STAFF.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTAFF_CODEChanging(value);
					this.SendPropertyChanging();
					this._STAFF_CODE = value;
					this.SendPropertyChanged("STAFF_CODE");
					this.OnSTAFF_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUBLICHOLIDAY_CODE", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PUBLICHOLIDAY_CODE
		{
			get
			{
				return this._PUBLICHOLIDAY_CODE;
			}
			set
			{
				if ((this._PUBLICHOLIDAY_CODE != value))
				{
					if (this._HR_PUBLICHOLIDAY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPUBLICHOLIDAY_CODEChanging(value);
					this.SendPropertyChanging();
					this._PUBLICHOLIDAY_CODE = value;
					this.SendPropertyChanged("PUBLICHOLIDAY_CODE");
					this.OnPUBLICHOLIDAY_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUBLICHOLIDAY_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> PUBLICHOLIDAY_DATE
		{
			get
			{
				return this._PUBLICHOLIDAY_DATE;
			}
			set
			{
				if ((this._PUBLICHOLIDAY_DATE != value))
				{
					this.OnPUBLICHOLIDAY_DATEChanging(value);
					this.SendPropertyChanging();
					this._PUBLICHOLIDAY_DATE = value;
					this.SendPropertyChanged("PUBLICHOLIDAY_DATE");
					this.OnPUBLICHOLIDAY_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAFF_USE_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> STAFF_USE_DATE
		{
			get
			{
				return this._STAFF_USE_DATE;
			}
			set
			{
				if ((this._STAFF_USE_DATE != value))
				{
					this.OnSTAFF_USE_DATEChanging(value);
					this.SendPropertyChanging();
					this._STAFF_USE_DATE = value;
					this.SendPropertyChanged("STAFF_USE_DATE");
					this.OnSTAFF_USE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUEST_FLAG", DbType="SmallInt")]
		public System.Nullable<short> REQUEST_FLAG
		{
			get
			{
				return this._REQUEST_FLAG;
			}
			set
			{
				if ((this._REQUEST_FLAG != value))
				{
					this.OnREQUEST_FLAGChanging(value);
					this.SendPropertyChanging();
					this._REQUEST_FLAG = value;
					this.SendPropertyChanged("REQUEST_FLAG");
					this.OnREQUEST_FLAGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_PUBLICHOLIDAY_HR_PUBLICHOLIDAYSTAFF", Storage="_HR_PUBLICHOLIDAY", ThisKey="PUBLICHOLIDAY_CODE", OtherKey="PUBLICHOLIDAY_CODE", IsForeignKey=true)]
		public HR_PUBLICHOLIDAY HR_PUBLICHOLIDAY
		{
			get
			{
				return this._HR_PUBLICHOLIDAY.Entity;
			}
			set
			{
				HR_PUBLICHOLIDAY previousValue = this._HR_PUBLICHOLIDAY.Entity;
				if (((previousValue != value) 
							|| (this._HR_PUBLICHOLIDAY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_PUBLICHOLIDAY.Entity = null;
						previousValue.HR_PUBLICHOLIDAYSTAFF.Remove(this);
					}
					this._HR_PUBLICHOLIDAY.Entity = value;
					if ((value != null))
					{
						value.HR_PUBLICHOLIDAYSTAFF.Add(this);
						this._PUBLICHOLIDAY_CODE = value.PUBLICHOLIDAY_CODE;
					}
					else
					{
						this._PUBLICHOLIDAY_CODE = default(string);
					}
					this.SendPropertyChanged("HR_PUBLICHOLIDAY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_STAFF_HR_PUBLICHOLIDAYSTAFF", Storage="_HR_STAFF", ThisKey="STAFF_CODE", OtherKey="STAFF_CODE", IsForeignKey=true)]
		public HR_STAFF HR_STAFF
		{
			get
			{
				return this._HR_STAFF.Entity;
			}
			set
			{
				HR_STAFF previousValue = this._HR_STAFF.Entity;
				if (((previousValue != value) 
							|| (this._HR_STAFF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_STAFF.Entity = null;
						previousValue.HR_PUBLICHOLIDAYSTAFF.Remove(this);
					}
					this._HR_STAFF.Entity = value;
					if ((value != null))
					{
						value.HR_PUBLICHOLIDAYSTAFF.Add(this);
						this._STAFF_CODE = value.STAFF_CODE;
					}
					else
					{
						this._STAFF_CODE = default(string);
					}
					this.SendPropertyChanged("HR_STAFF");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="HR_ROSTERS")]
	public partial class HR_ROSTERS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ROSTER_ID;
		
		private string _BRANCH_CODE;
		
		private string _STAFF_CODE;
		
		private System.DateTime _ROSTER_DATE;
		
		private string _BRANCHSHIFT_CODE;
		
		private int _ROSTER_QUEUEPOS;
		
		private short _ROSTER_SHIFTLOCK;
		
		private EntityRef<HR_BRANCH> _HR_BRANCH;
		
		private EntityRef<HR_BRANCHSHIFT> _HR_BRANCHSHIFT;
		
		private EntityRef<HR_STAFF> _HR_STAFF;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnROSTER_IDChanging(int value);
    partial void OnROSTER_IDChanged();
    partial void OnBRANCH_CODEChanging(string value);
    partial void OnBRANCH_CODEChanged();
    partial void OnSTAFF_CODEChanging(string value);
    partial void OnSTAFF_CODEChanged();
    partial void OnROSTER_DATEChanging(System.DateTime value);
    partial void OnROSTER_DATEChanged();
    partial void OnBRANCHSHIFT_CODEChanging(string value);
    partial void OnBRANCHSHIFT_CODEChanged();
    partial void OnROSTER_QUEUEPOSChanging(int value);
    partial void OnROSTER_QUEUEPOSChanged();
    partial void OnROSTER_SHIFTLOCKChanging(short value);
    partial void OnROSTER_SHIFTLOCKChanged();
    #endregion
		
		public HR_ROSTERS()
		{
			this._HR_BRANCH = default(EntityRef<HR_BRANCH>);
			this._HR_BRANCHSHIFT = default(EntityRef<HR_BRANCHSHIFT>);
			this._HR_STAFF = default(EntityRef<HR_STAFF>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROSTER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ROSTER_ID
		{
			get
			{
				return this._ROSTER_ID;
			}
			set
			{
				if ((this._ROSTER_ID != value))
				{
					this.OnROSTER_IDChanging(value);
					this.SendPropertyChanging();
					this._ROSTER_ID = value;
					this.SendPropertyChanged("ROSTER_ID");
					this.OnROSTER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCH_CODE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string BRANCH_CODE
		{
			get
			{
				return this._BRANCH_CODE;
			}
			set
			{
				if ((this._BRANCH_CODE != value))
				{
					if (this._HR_BRANCH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBRANCH_CODEChanging(value);
					this.SendPropertyChanging();
					this._BRANCH_CODE = value;
					this.SendPropertyChanged("BRANCH_CODE");
					this.OnBRANCH_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAFF_CODE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string STAFF_CODE
		{
			get
			{
				return this._STAFF_CODE;
			}
			set
			{
				if ((this._STAFF_CODE != value))
				{
					if (this._HR_STAFF.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTAFF_CODEChanging(value);
					this.SendPropertyChanging();
					this._STAFF_CODE = value;
					this.SendPropertyChanged("STAFF_CODE");
					this.OnSTAFF_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROSTER_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime ROSTER_DATE
		{
			get
			{
				return this._ROSTER_DATE;
			}
			set
			{
				if ((this._ROSTER_DATE != value))
				{
					this.OnROSTER_DATEChanging(value);
					this.SendPropertyChanging();
					this._ROSTER_DATE = value;
					this.SendPropertyChanged("ROSTER_DATE");
					this.OnROSTER_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCHSHIFT_CODE", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string BRANCHSHIFT_CODE
		{
			get
			{
				return this._BRANCHSHIFT_CODE;
			}
			set
			{
				if ((this._BRANCHSHIFT_CODE != value))
				{
					if (this._HR_BRANCHSHIFT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBRANCHSHIFT_CODEChanging(value);
					this.SendPropertyChanging();
					this._BRANCHSHIFT_CODE = value;
					this.SendPropertyChanged("BRANCHSHIFT_CODE");
					this.OnBRANCHSHIFT_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROSTER_QUEUEPOS", DbType="Int NOT NULL")]
		public int ROSTER_QUEUEPOS
		{
			get
			{
				return this._ROSTER_QUEUEPOS;
			}
			set
			{
				if ((this._ROSTER_QUEUEPOS != value))
				{
					this.OnROSTER_QUEUEPOSChanging(value);
					this.SendPropertyChanging();
					this._ROSTER_QUEUEPOS = value;
					this.SendPropertyChanged("ROSTER_QUEUEPOS");
					this.OnROSTER_QUEUEPOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROSTER_SHIFTLOCK", DbType="SmallInt NOT NULL")]
		public short ROSTER_SHIFTLOCK
		{
			get
			{
				return this._ROSTER_SHIFTLOCK;
			}
			set
			{
				if ((this._ROSTER_SHIFTLOCK != value))
				{
					this.OnROSTER_SHIFTLOCKChanging(value);
					this.SendPropertyChanging();
					this._ROSTER_SHIFTLOCK = value;
					this.SendPropertyChanged("ROSTER_SHIFTLOCK");
					this.OnROSTER_SHIFTLOCKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_BRANCH_HR_ROSTERS", Storage="_HR_BRANCH", ThisKey="BRANCH_CODE", OtherKey="BRANCH_CODE", IsForeignKey=true)]
		public HR_BRANCH HR_BRANCH
		{
			get
			{
				return this._HR_BRANCH.Entity;
			}
			set
			{
				HR_BRANCH previousValue = this._HR_BRANCH.Entity;
				if (((previousValue != value) 
							|| (this._HR_BRANCH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_BRANCH.Entity = null;
						previousValue.HR_ROSTERS.Remove(this);
					}
					this._HR_BRANCH.Entity = value;
					if ((value != null))
					{
						value.HR_ROSTERS.Add(this);
						this._BRANCH_CODE = value.BRANCH_CODE;
					}
					else
					{
						this._BRANCH_CODE = default(string);
					}
					this.SendPropertyChanged("HR_BRANCH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_BRANCHSHIFT_HR_ROSTERS", Storage="_HR_BRANCHSHIFT", ThisKey="BRANCHSHIFT_CODE", OtherKey="BRANCHSHIFT_CODE", IsForeignKey=true)]
		public HR_BRANCHSHIFT HR_BRANCHSHIFT
		{
			get
			{
				return this._HR_BRANCHSHIFT.Entity;
			}
			set
			{
				HR_BRANCHSHIFT previousValue = this._HR_BRANCHSHIFT.Entity;
				if (((previousValue != value) 
							|| (this._HR_BRANCHSHIFT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_BRANCHSHIFT.Entity = null;
						previousValue.HR_ROSTERS.Remove(this);
					}
					this._HR_BRANCHSHIFT.Entity = value;
					if ((value != null))
					{
						value.HR_ROSTERS.Add(this);
						this._BRANCHSHIFT_CODE = value.BRANCHSHIFT_CODE;
					}
					else
					{
						this._BRANCHSHIFT_CODE = default(string);
					}
					this.SendPropertyChanged("HR_BRANCHSHIFT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_STAFF_HR_ROSTERS", Storage="_HR_STAFF", ThisKey="STAFF_CODE", OtherKey="STAFF_CODE", IsForeignKey=true)]
		public HR_STAFF HR_STAFF
		{
			get
			{
				return this._HR_STAFF.Entity;
			}
			set
			{
				HR_STAFF previousValue = this._HR_STAFF.Entity;
				if (((previousValue != value) 
							|| (this._HR_STAFF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_STAFF.Entity = null;
						previousValue.HR_ROSTERS.Remove(this);
					}
					this._HR_STAFF.Entity = value;
					if ((value != null))
					{
						value.HR_ROSTERS.Add(this);
						this._STAFF_CODE = value.STAFF_CODE;
					}
					else
					{
						this._STAFF_CODE = default(string);
					}
					this.SendPropertyChanged("HR_STAFF");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="HR_STAFF")]
	public partial class HR_STAFF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _STAFF_CODE;
		
		private string _BRANCH_CODE;
		
		private string _TITLE_CODE;
		
		private string _STAFF_NAME_CHI;
		
		private string _STAFF_NAME_ENG;
		
		private string _STAFF_EMAILADDRESS;
		
		private System.Nullable<System.DateTime> _STAFF_DATECREATE;
		
		private System.Nullable<System.DateTime> _STAFF_DATELEAVE;
		
		private EntitySet<HR_STAFFSHIFTSHOP> _HR_STAFFSHIFTSHOP;
		
		private EntitySet<HR_PUBLICHOLIDAYSTAFF> _HR_PUBLICHOLIDAYSTAFF;
		
		private EntitySet<HR_ROSTERS> _HR_ROSTERS;
		
		private EntityRef<HR_BRANCH> _HR_BRANCH;
		
		private EntityRef<HR_STAFF_TITLE> _HR_STAFF_TITLE;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTAFF_CODEChanging(string value);
    partial void OnSTAFF_CODEChanged();
    partial void OnBRANCH_CODEChanging(string value);
    partial void OnBRANCH_CODEChanged();
    partial void OnTITLE_CODEChanging(string value);
    partial void OnTITLE_CODEChanged();
    partial void OnSTAFF_NAME_CHIChanging(string value);
    partial void OnSTAFF_NAME_CHIChanged();
    partial void OnSTAFF_NAME_ENGChanging(string value);
    partial void OnSTAFF_NAME_ENGChanged();
    partial void OnSTAFF_EMAILADDRESSChanging(string value);
    partial void OnSTAFF_EMAILADDRESSChanged();
    partial void OnSTAFF_DATECREATEChanging(System.Nullable<System.DateTime> value);
    partial void OnSTAFF_DATECREATEChanged();
    partial void OnSTAFF_DATELEAVEChanging(System.Nullable<System.DateTime> value);
    partial void OnSTAFF_DATELEAVEChanged();
    #endregion
		
		public HR_STAFF()
		{
			this._HR_STAFFSHIFTSHOP = new EntitySet<HR_STAFFSHIFTSHOP>(new Action<HR_STAFFSHIFTSHOP>(this.attach_HR_STAFFSHIFTSHOP), new Action<HR_STAFFSHIFTSHOP>(this.detach_HR_STAFFSHIFTSHOP));
			this._HR_PUBLICHOLIDAYSTAFF = new EntitySet<HR_PUBLICHOLIDAYSTAFF>(new Action<HR_PUBLICHOLIDAYSTAFF>(this.attach_HR_PUBLICHOLIDAYSTAFF), new Action<HR_PUBLICHOLIDAYSTAFF>(this.detach_HR_PUBLICHOLIDAYSTAFF));
			this._HR_ROSTERS = new EntitySet<HR_ROSTERS>(new Action<HR_ROSTERS>(this.attach_HR_ROSTERS), new Action<HR_ROSTERS>(this.detach_HR_ROSTERS));
			this._HR_BRANCH = default(EntityRef<HR_BRANCH>);
			this._HR_STAFF_TITLE = default(EntityRef<HR_STAFF_TITLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAFF_CODE", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string STAFF_CODE
		{
			get
			{
				return this._STAFF_CODE;
			}
			set
			{
				if ((this._STAFF_CODE != value))
				{
					this.OnSTAFF_CODEChanging(value);
					this.SendPropertyChanging();
					this._STAFF_CODE = value;
					this.SendPropertyChanged("STAFF_CODE");
					this.OnSTAFF_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCH_CODE", DbType="VarChar(20)")]
		public string BRANCH_CODE
		{
			get
			{
				return this._BRANCH_CODE;
			}
			set
			{
				if ((this._BRANCH_CODE != value))
				{
					if (this._HR_BRANCH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBRANCH_CODEChanging(value);
					this.SendPropertyChanging();
					this._BRANCH_CODE = value;
					this.SendPropertyChanged("BRANCH_CODE");
					this.OnBRANCH_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE_CODE", DbType="VarChar(20)")]
		public string TITLE_CODE
		{
			get
			{
				return this._TITLE_CODE;
			}
			set
			{
				if ((this._TITLE_CODE != value))
				{
					if (this._HR_STAFF_TITLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTITLE_CODEChanging(value);
					this.SendPropertyChanging();
					this._TITLE_CODE = value;
					this.SendPropertyChanged("TITLE_CODE");
					this.OnTITLE_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAFF_NAME_CHI", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string STAFF_NAME_CHI
		{
			get
			{
				return this._STAFF_NAME_CHI;
			}
			set
			{
				if ((this._STAFF_NAME_CHI != value))
				{
					this.OnSTAFF_NAME_CHIChanging(value);
					this.SendPropertyChanging();
					this._STAFF_NAME_CHI = value;
					this.SendPropertyChanged("STAFF_NAME_CHI");
					this.OnSTAFF_NAME_CHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAFF_NAME_ENG", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string STAFF_NAME_ENG
		{
			get
			{
				return this._STAFF_NAME_ENG;
			}
			set
			{
				if ((this._STAFF_NAME_ENG != value))
				{
					this.OnSTAFF_NAME_ENGChanging(value);
					this.SendPropertyChanging();
					this._STAFF_NAME_ENG = value;
					this.SendPropertyChanged("STAFF_NAME_ENG");
					this.OnSTAFF_NAME_ENGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAFF_EMAILADDRESS", DbType="VarChar(50)")]
		public string STAFF_EMAILADDRESS
		{
			get
			{
				return this._STAFF_EMAILADDRESS;
			}
			set
			{
				if ((this._STAFF_EMAILADDRESS != value))
				{
					this.OnSTAFF_EMAILADDRESSChanging(value);
					this.SendPropertyChanging();
					this._STAFF_EMAILADDRESS = value;
					this.SendPropertyChanged("STAFF_EMAILADDRESS");
					this.OnSTAFF_EMAILADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAFF_DATECREATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> STAFF_DATECREATE
		{
			get
			{
				return this._STAFF_DATECREATE;
			}
			set
			{
				if ((this._STAFF_DATECREATE != value))
				{
					this.OnSTAFF_DATECREATEChanging(value);
					this.SendPropertyChanging();
					this._STAFF_DATECREATE = value;
					this.SendPropertyChanged("STAFF_DATECREATE");
					this.OnSTAFF_DATECREATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAFF_DATELEAVE", DbType="DateTime")]
		public System.Nullable<System.DateTime> STAFF_DATELEAVE
		{
			get
			{
				return this._STAFF_DATELEAVE;
			}
			set
			{
				if ((this._STAFF_DATELEAVE != value))
				{
					this.OnSTAFF_DATELEAVEChanging(value);
					this.SendPropertyChanging();
					this._STAFF_DATELEAVE = value;
					this.SendPropertyChanged("STAFF_DATELEAVE");
					this.OnSTAFF_DATELEAVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_STAFF_HR_STAFFSHIFTSHOP", Storage="_HR_STAFFSHIFTSHOP", ThisKey="STAFF_CODE", OtherKey="STAFF_CODE")]
		public EntitySet<HR_STAFFSHIFTSHOP> HR_STAFFSHIFTSHOP
		{
			get
			{
				return this._HR_STAFFSHIFTSHOP;
			}
			set
			{
				this._HR_STAFFSHIFTSHOP.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_STAFF_HR_PUBLICHOLIDAYSTAFF", Storage="_HR_PUBLICHOLIDAYSTAFF", ThisKey="STAFF_CODE", OtherKey="STAFF_CODE")]
		public EntitySet<HR_PUBLICHOLIDAYSTAFF> HR_PUBLICHOLIDAYSTAFF
		{
			get
			{
				return this._HR_PUBLICHOLIDAYSTAFF;
			}
			set
			{
				this._HR_PUBLICHOLIDAYSTAFF.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_STAFF_HR_ROSTERS", Storage="_HR_ROSTERS", ThisKey="STAFF_CODE", OtherKey="STAFF_CODE")]
		public EntitySet<HR_ROSTERS> HR_ROSTERS
		{
			get
			{
				return this._HR_ROSTERS;
			}
			set
			{
				this._HR_ROSTERS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_BRANCH_HR_STAFF", Storage="_HR_BRANCH", ThisKey="BRANCH_CODE", OtherKey="BRANCH_CODE", IsForeignKey=true)]
		public HR_BRANCH HR_BRANCH
		{
			get
			{
				return this._HR_BRANCH.Entity;
			}
			set
			{
				HR_BRANCH previousValue = this._HR_BRANCH.Entity;
				if (((previousValue != value) 
							|| (this._HR_BRANCH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_BRANCH.Entity = null;
						previousValue.HR_STAFF.Remove(this);
					}
					this._HR_BRANCH.Entity = value;
					if ((value != null))
					{
						value.HR_STAFF.Add(this);
						this._BRANCH_CODE = value.BRANCH_CODE;
					}
					else
					{
						this._BRANCH_CODE = default(string);
					}
					this.SendPropertyChanged("HR_BRANCH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_STAFF_TITLE_HR_STAFF", Storage="_HR_STAFF_TITLE", ThisKey="TITLE_CODE", OtherKey="TITLE_CODE", IsForeignKey=true)]
		public HR_STAFF_TITLE HR_STAFF_TITLE
		{
			get
			{
				return this._HR_STAFF_TITLE.Entity;
			}
			set
			{
				HR_STAFF_TITLE previousValue = this._HR_STAFF_TITLE.Entity;
				if (((previousValue != value) 
							|| (this._HR_STAFF_TITLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_STAFF_TITLE.Entity = null;
						previousValue.HR_STAFF.Remove(this);
					}
					this._HR_STAFF_TITLE.Entity = value;
					if ((value != null))
					{
						value.HR_STAFF.Add(this);
						this._TITLE_CODE = value.TITLE_CODE;
					}
					else
					{
						this._TITLE_CODE = default(string);
					}
					this.SendPropertyChanged("HR_STAFF_TITLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HR_STAFFSHIFTSHOP(HR_STAFFSHIFTSHOP entity)
		{
			this.SendPropertyChanging();
			entity.HR_STAFF = this;
		}
		
		private void detach_HR_STAFFSHIFTSHOP(HR_STAFFSHIFTSHOP entity)
		{
			this.SendPropertyChanging();
			entity.HR_STAFF = null;
		}
		
		private void attach_HR_PUBLICHOLIDAYSTAFF(HR_PUBLICHOLIDAYSTAFF entity)
		{
			this.SendPropertyChanging();
			entity.HR_STAFF = this;
		}
		
		private void detach_HR_PUBLICHOLIDAYSTAFF(HR_PUBLICHOLIDAYSTAFF entity)
		{
			this.SendPropertyChanging();
			entity.HR_STAFF = null;
		}
		
		private void attach_HR_ROSTERS(HR_ROSTERS entity)
		{
			this.SendPropertyChanging();
			entity.HR_STAFF = this;
		}
		
		private void detach_HR_ROSTERS(HR_ROSTERS entity)
		{
			this.SendPropertyChanging();
			entity.HR_STAFF = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="HR_STAFF_TITLE")]
	public partial class HR_STAFF_TITLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TITLE_CODE;
		
		private string _TITLE_NAME_CHI;
		
		private string _TITLE_NAME_ENG;
		
		private System.Nullable<int> _TITLE_PRIORITY;
		
		private string _TITLE_EXP_DATA;
		
		private EntitySet<HR_STAFF> _HR_STAFF;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTITLE_CODEChanging(string value);
    partial void OnTITLE_CODEChanged();
    partial void OnTITLE_NAME_CHIChanging(string value);
    partial void OnTITLE_NAME_CHIChanged();
    partial void OnTITLE_NAME_ENGChanging(string value);
    partial void OnTITLE_NAME_ENGChanged();
    partial void OnTITLE_PRIORITYChanging(System.Nullable<int> value);
    partial void OnTITLE_PRIORITYChanged();
    partial void OnTITLE_EXP_DATAChanging(string value);
    partial void OnTITLE_EXP_DATAChanged();
    #endregion
		
		public HR_STAFF_TITLE()
		{
			this._HR_STAFF = new EntitySet<HR_STAFF>(new Action<HR_STAFF>(this.attach_HR_STAFF), new Action<HR_STAFF>(this.detach_HR_STAFF));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE_CODE", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TITLE_CODE
		{
			get
			{
				return this._TITLE_CODE;
			}
			set
			{
				if ((this._TITLE_CODE != value))
				{
					this.OnTITLE_CODEChanging(value);
					this.SendPropertyChanging();
					this._TITLE_CODE = value;
					this.SendPropertyChanged("TITLE_CODE");
					this.OnTITLE_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE_NAME_CHI", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TITLE_NAME_CHI
		{
			get
			{
				return this._TITLE_NAME_CHI;
			}
			set
			{
				if ((this._TITLE_NAME_CHI != value))
				{
					this.OnTITLE_NAME_CHIChanging(value);
					this.SendPropertyChanging();
					this._TITLE_NAME_CHI = value;
					this.SendPropertyChanged("TITLE_NAME_CHI");
					this.OnTITLE_NAME_CHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE_NAME_ENG", DbType="VarChar(100)")]
		public string TITLE_NAME_ENG
		{
			get
			{
				return this._TITLE_NAME_ENG;
			}
			set
			{
				if ((this._TITLE_NAME_ENG != value))
				{
					this.OnTITLE_NAME_ENGChanging(value);
					this.SendPropertyChanging();
					this._TITLE_NAME_ENG = value;
					this.SendPropertyChanged("TITLE_NAME_ENG");
					this.OnTITLE_NAME_ENGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE_PRIORITY", DbType="Int")]
		public System.Nullable<int> TITLE_PRIORITY
		{
			get
			{
				return this._TITLE_PRIORITY;
			}
			set
			{
				if ((this._TITLE_PRIORITY != value))
				{
					this.OnTITLE_PRIORITYChanging(value);
					this.SendPropertyChanging();
					this._TITLE_PRIORITY = value;
					this.SendPropertyChanged("TITLE_PRIORITY");
					this.OnTITLE_PRIORITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE_EXP_DATA", DbType="VarChar(200)")]
		public string TITLE_EXP_DATA
		{
			get
			{
				return this._TITLE_EXP_DATA;
			}
			set
			{
				if ((this._TITLE_EXP_DATA != value))
				{
					this.OnTITLE_EXP_DATAChanging(value);
					this.SendPropertyChanging();
					this._TITLE_EXP_DATA = value;
					this.SendPropertyChanged("TITLE_EXP_DATA");
					this.OnTITLE_EXP_DATAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_STAFF_TITLE_HR_STAFF", Storage="_HR_STAFF", ThisKey="TITLE_CODE", OtherKey="TITLE_CODE")]
		public EntitySet<HR_STAFF> HR_STAFF
		{
			get
			{
				return this._HR_STAFF;
			}
			set
			{
				this._HR_STAFF.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HR_STAFF(HR_STAFF entity)
		{
			this.SendPropertyChanging();
			entity.HR_STAFF_TITLE = this;
		}
		
		private void detach_HR_STAFF(HR_STAFF entity)
		{
			this.SendPropertyChanging();
			entity.HR_STAFF_TITLE = null;
		}
	}
}
#pragma warning restore 1591
