//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17379
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyWcfServiceClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TestInsertData", ReplyAction="http://tempuri.org/IService1/TestInsertDataResponse")]
        bool TestInsertData(int main_id, string main_val, int sub_id, string sub_value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TestDeleteData", ReplyAction="http://tempuri.org/IService1/TestDeleteDataResponse")]
        bool TestDeleteData(int main_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TestInsertMain", ReplyAction="http://tempuri.org/IService1/TestInsertMainResponse")]
        bool TestInsertMain(int id, string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TestInsertSub", ReplyAction="http://tempuri.org/IService1/TestInsertSubResponse")]
        bool TestInsertSub(int id, int main_id, string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TestInsertAll", ReplyAction="http://tempuri.org/IService1/TestInsertAllResponse")]
        bool TestInsertAll(int main_id, string main_val, int sub_id, string sub_value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MyWcfServiceClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MyWcfServiceClient.ServiceReference1.IService1>, MyWcfServiceClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public bool TestInsertData(int main_id, string main_val, int sub_id, string sub_value) {
            return base.Channel.TestInsertData(main_id, main_val, sub_id, sub_value);
        }
        
        public bool TestDeleteData(int main_id) {
            return base.Channel.TestDeleteData(main_id);
        }
        
        public bool TestInsertMain(int id, string val) {
            return base.Channel.TestInsertMain(id, val);
        }
        
        public bool TestInsertSub(int id, int main_id, string val) {
            return base.Channel.TestInsertSub(id, main_id, val);
        }
        
        public bool TestInsertAll(int main_id, string main_val, int sub_id, string sub_value) {
            return base.Channel.TestInsertAll(main_id, main_val, sub_id, sub_value);
        }
    }
}
