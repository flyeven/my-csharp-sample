#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.239
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace A0162_SQL_Server_Func_MyRule_UnitTest
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UnitTest")]
	public partial class MyRuleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertmr_action(mr_action instance);
    partial void Updatemr_action(mr_action instance);
    partial void Deletemr_action(mr_action instance);
    partial void Insertmr_user_role(mr_user_role instance);
    partial void Updatemr_user_role(mr_user_role instance);
    partial void Deletemr_user_role(mr_user_role instance);
    partial void Insertmr_demo_data(mr_demo_data instance);
    partial void Updatemr_demo_data(mr_demo_data instance);
    partial void Deletemr_demo_data(mr_demo_data instance);
    partial void Insertmr_dept(mr_dept instance);
    partial void Updatemr_dept(mr_dept instance);
    partial void Deletemr_dept(mr_dept instance);
    partial void Insertmr_dept_user(mr_dept_user instance);
    partial void Updatemr_dept_user(mr_dept_user instance);
    partial void Deletemr_dept_user(mr_dept_user instance);
    partial void Insertmr_module(mr_module instance);
    partial void Updatemr_module(mr_module instance);
    partial void Deletemr_module(mr_module instance);
    partial void Insertmr_permission(mr_permission instance);
    partial void Updatemr_permission(mr_permission instance);
    partial void Deletemr_permission(mr_permission instance);
    partial void Insertmr_role(mr_role instance);
    partial void Updatemr_role(mr_role instance);
    partial void Deletemr_role(mr_role instance);
    partial void Insertmr_role_action(mr_role_action instance);
    partial void Updatemr_role_action(mr_role_action instance);
    partial void Deletemr_role_action(mr_role_action instance);
    partial void Insertmr_role_module(mr_role_module instance);
    partial void Updatemr_role_module(mr_role_module instance);
    partial void Deletemr_role_module(mr_role_module instance);
    partial void Insertmr_user(mr_user instance);
    partial void Updatemr_user(mr_user instance);
    partial void Deletemr_user(mr_user instance);
    partial void Insertmr_user_action(mr_user_action instance);
    partial void Updatemr_user_action(mr_user_action instance);
    partial void Deletemr_user_action(mr_user_action instance);
    partial void Insertmr_user_module(mr_user_module instance);
    partial void Updatemr_user_module(mr_user_module instance);
    partial void Deletemr_user_module(mr_user_module instance);
    #endregion
		
		public MyRuleDataContext() : 
				base(global::A0162_SQL_Server_Func_MyRule_UnitTest.Properties.Settings.Default.UnitTestConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyRuleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyRuleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyRuleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyRuleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<mr_action> mr_action
		{
			get
			{
				return this.GetTable<mr_action>();
			}
		}
		
		public System.Data.Linq.Table<mr_user_role> mr_user_role
		{
			get
			{
				return this.GetTable<mr_user_role>();
			}
		}
		
		public System.Data.Linq.Table<mr_demo_data> mr_demo_data
		{
			get
			{
				return this.GetTable<mr_demo_data>();
			}
		}
		
		public System.Data.Linq.Table<mr_dept> mr_dept
		{
			get
			{
				return this.GetTable<mr_dept>();
			}
		}
		
		public System.Data.Linq.Table<mr_dept_user> mr_dept_user
		{
			get
			{
				return this.GetTable<mr_dept_user>();
			}
		}
		
		public System.Data.Linq.Table<mr_module> mr_module
		{
			get
			{
				return this.GetTable<mr_module>();
			}
		}
		
		public System.Data.Linq.Table<mr_permission> mr_permission
		{
			get
			{
				return this.GetTable<mr_permission>();
			}
		}
		
		public System.Data.Linq.Table<mr_role> mr_role
		{
			get
			{
				return this.GetTable<mr_role>();
			}
		}
		
		public System.Data.Linq.Table<mr_role_action> mr_role_action
		{
			get
			{
				return this.GetTable<mr_role_action>();
			}
		}
		
		public System.Data.Linq.Table<mr_role_module> mr_role_module
		{
			get
			{
				return this.GetTable<mr_role_module>();
			}
		}
		
		public System.Data.Linq.Table<mr_user> mr_user
		{
			get
			{
				return this.GetTable<mr_user>();
			}
		}
		
		public System.Data.Linq.Table<mr_user_action> mr_user_action
		{
			get
			{
				return this.GetTable<mr_user_action>();
			}
		}
		
		public System.Data.Linq.Table<mr_user_module> mr_user_module
		{
			get
			{
				return this.GetTable<mr_user_module>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MyRule_RoleAccessAbleAction", IsComposable=true)]
		public IQueryable<MyRule_RoleAccessAbleActionResult> MyRule_RoleAccessAbleAction([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> moduleID)
		{
			return this.CreateMethodCallQuery<MyRule_RoleAccessAbleActionResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID, moduleID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MyRule_UserAccessAbleAction", IsComposable=true)]
		public IQueryable<MyRule_UserAccessAbleActionResult> MyRule_UserAccessAbleAction([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> moduleID)
		{
			return this.CreateMethodCallQuery<MyRule_UserAccessAbleActionResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, moduleID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MyRule_UserOwnRole", IsComposable=true)]
		public IQueryable<MyRule_UserOwnRoleResult> MyRule_UserOwnRole([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID)
		{
			return this.CreateMethodCallQuery<MyRule_UserOwnRoleResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MyRule_UserAccessAbleDept", IsComposable=true)]
		public IQueryable<MyRule_UserAccessAbleDeptResult> MyRule_UserAccessAbleDept([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string deptType)
		{
			return this.CreateMethodCallQuery<MyRule_UserAccessAbleDeptResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, deptType);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MyRule_AllUserAccessAbleAction", IsComposable=true)]
		public IQueryable<MyRule_AllUserAccessAbleActionResult> MyRule_AllUserAccessAbleAction([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> moduleID)
		{
			return this.CreateMethodCallQuery<MyRule_AllUserAccessAbleActionResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, moduleID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MyRule_AllUserAccessAbleModule", IsComposable=true)]
		public IQueryable<MyRule_AllUserAccessAbleModuleResult> MyRule_AllUserAccessAbleModule([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID)
		{
			return this.CreateMethodCallQuery<MyRule_AllUserAccessAbleModuleResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MyRule_RoleAccessAbleModule", IsComposable=true)]
		public IQueryable<MyRule_RoleAccessAbleModuleResult> MyRule_RoleAccessAbleModule([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> roleID)
		{
			return this.CreateMethodCallQuery<MyRule_RoleAccessAbleModuleResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MyRule_UserAccessAbleModule", IsComposable=true)]
		public IQueryable<MyRule_UserAccessAbleModuleResult> MyRule_UserAccessAbleModule([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID)
		{
			return this.CreateMethodCallQuery<MyRule_UserAccessAbleModuleResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mr_action")]
	public partial class mr_action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _action_id;
		
		private int _module_id;
		
		private string _action_name;
		
		private byte _default_rule;
		
		private short _status;
		
		private EntitySet<mr_role_action> _mr_role_action;
		
		private EntitySet<mr_user_action> _mr_user_action;
		
		private EntityRef<mr_module> _mr_module;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onaction_idChanging(int value);
    partial void Onaction_idChanged();
    partial void Onmodule_idChanging(int value);
    partial void Onmodule_idChanged();
    partial void Onaction_nameChanging(string value);
    partial void Onaction_nameChanged();
    partial void Ondefault_ruleChanging(byte value);
    partial void Ondefault_ruleChanged();
    partial void OnstatusChanging(short value);
    partial void OnstatusChanged();
    #endregion
		
		public mr_action()
		{
			this._mr_role_action = new EntitySet<mr_role_action>(new Action<mr_role_action>(this.attach_mr_role_action), new Action<mr_role_action>(this.detach_mr_role_action));
			this._mr_user_action = new EntitySet<mr_user_action>(new Action<mr_user_action>(this.attach_mr_user_action), new Action<mr_user_action>(this.detach_mr_user_action));
			this._mr_module = default(EntityRef<mr_module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int action_id
		{
			get
			{
				return this._action_id;
			}
			set
			{
				if ((this._action_id != value))
				{
					this.Onaction_idChanging(value);
					this.SendPropertyChanging();
					this._action_id = value;
					this.SendPropertyChanged("action_id");
					this.Onaction_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_id", DbType="Int NOT NULL")]
		public int module_id
		{
			get
			{
				return this._module_id;
			}
			set
			{
				if ((this._module_id != value))
				{
					if (this._mr_module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmodule_idChanging(value);
					this.SendPropertyChanging();
					this._module_id = value;
					this.SendPropertyChanged("module_id");
					this.Onmodule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string action_name
		{
			get
			{
				return this._action_name;
			}
			set
			{
				if ((this._action_name != value))
				{
					this.Onaction_nameChanging(value);
					this.SendPropertyChanging();
					this._action_name = value;
					this.SendPropertyChanged("action_name");
					this.Onaction_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_default_rule", DbType="TinyInt NOT NULL")]
		public byte default_rule
		{
			get
			{
				return this._default_rule;
			}
			set
			{
				if ((this._default_rule != value))
				{
					this.Ondefault_ruleChanging(value);
					this.SendPropertyChanging();
					this._default_rule = value;
					this.SendPropertyChanged("default_rule");
					this.Ondefault_ruleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt NOT NULL")]
		public short status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_action_mr_role_action", Storage="_mr_role_action", ThisKey="action_id", OtherKey="action_id")]
		public EntitySet<mr_role_action> mr_role_action
		{
			get
			{
				return this._mr_role_action;
			}
			set
			{
				this._mr_role_action.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_action_mr_user_action", Storage="_mr_user_action", ThisKey="action_id", OtherKey="action_id")]
		public EntitySet<mr_user_action> mr_user_action
		{
			get
			{
				return this._mr_user_action;
			}
			set
			{
				this._mr_user_action.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_module_mr_action", Storage="_mr_module", ThisKey="module_id", OtherKey="module_id", IsForeignKey=true)]
		public mr_module mr_module
		{
			get
			{
				return this._mr_module.Entity;
			}
			set
			{
				mr_module previousValue = this._mr_module.Entity;
				if (((previousValue != value) 
							|| (this._mr_module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_module.Entity = null;
						previousValue.mr_action.Remove(this);
					}
					this._mr_module.Entity = value;
					if ((value != null))
					{
						value.mr_action.Add(this);
						this._module_id = value.module_id;
					}
					else
					{
						this._module_id = default(int);
					}
					this.SendPropertyChanged("mr_module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mr_role_action(mr_role_action entity)
		{
			this.SendPropertyChanging();
			entity.mr_action = this;
		}
		
		private void detach_mr_role_action(mr_role_action entity)
		{
			this.SendPropertyChanging();
			entity.mr_action = null;
		}
		
		private void attach_mr_user_action(mr_user_action entity)
		{
			this.SendPropertyChanging();
			entity.mr_action = this;
		}
		
		private void detach_mr_user_action(mr_user_action entity)
		{
			this.SendPropertyChanging();
			entity.mr_action = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mr_user_role")]
	public partial class mr_user_role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private int _role_id;
		
		private EntityRef<mr_role> _mr_role;
		
		private EntityRef<mr_user> _mr_user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    #endregion
		
		public mr_user_role()
		{
			this._mr_role = default(EntityRef<mr_role>);
			this._mr_user = default(EntityRef<mr_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._mr_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					if (this._mr_role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_role_mr_user_role", Storage="_mr_role", ThisKey="role_id", OtherKey="role_id", IsForeignKey=true)]
		public mr_role mr_role
		{
			get
			{
				return this._mr_role.Entity;
			}
			set
			{
				mr_role previousValue = this._mr_role.Entity;
				if (((previousValue != value) 
							|| (this._mr_role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_role.Entity = null;
						previousValue.mr_user_role.Remove(this);
					}
					this._mr_role.Entity = value;
					if ((value != null))
					{
						value.mr_user_role.Add(this);
						this._role_id = value.role_id;
					}
					else
					{
						this._role_id = default(int);
					}
					this.SendPropertyChanged("mr_role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_user_mr_user_role", Storage="_mr_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public mr_user mr_user
		{
			get
			{
				return this._mr_user.Entity;
			}
			set
			{
				mr_user previousValue = this._mr_user.Entity;
				if (((previousValue != value) 
							|| (this._mr_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_user.Entity = null;
						previousValue.mr_user_role.Remove(this);
					}
					this._mr_user.Entity = value;
					if ((value != null))
					{
						value.mr_user_role.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("mr_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mr_demo_data")]
	public partial class mr_demo_data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _demo_id;
		
		private int _city_id;
		
		private int _dept_id;
		
		private string _demo_info;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondemo_idChanging(int value);
    partial void Ondemo_idChanged();
    partial void Oncity_idChanging(int value);
    partial void Oncity_idChanged();
    partial void Ondept_idChanging(int value);
    partial void Ondept_idChanged();
    partial void Ondemo_infoChanging(string value);
    partial void Ondemo_infoChanged();
    #endregion
		
		public mr_demo_data()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_demo_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int demo_id
		{
			get
			{
				return this._demo_id;
			}
			set
			{
				if ((this._demo_id != value))
				{
					this.Ondemo_idChanging(value);
					this.SendPropertyChanging();
					this._demo_id = value;
					this.SendPropertyChanged("demo_id");
					this.Ondemo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_id", DbType="Int NOT NULL")]
		public int city_id
		{
			get
			{
				return this._city_id;
			}
			set
			{
				if ((this._city_id != value))
				{
					this.Oncity_idChanging(value);
					this.SendPropertyChanging();
					this._city_id = value;
					this.SendPropertyChanged("city_id");
					this.Oncity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_id", DbType="Int NOT NULL")]
		public int dept_id
		{
			get
			{
				return this._dept_id;
			}
			set
			{
				if ((this._dept_id != value))
				{
					this.Ondept_idChanging(value);
					this.SendPropertyChanging();
					this._dept_id = value;
					this.SendPropertyChanged("dept_id");
					this.Ondept_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_demo_info", DbType="VarChar(30)")]
		public string demo_info
		{
			get
			{
				return this._demo_info;
			}
			set
			{
				if ((this._demo_info != value))
				{
					this.Ondemo_infoChanging(value);
					this.SendPropertyChanging();
					this._demo_info = value;
					this.SendPropertyChanged("demo_info");
					this.Ondemo_infoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mr_dept")]
	public partial class mr_dept : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dept_id;
		
		private System.Nullable<int> _parent_id;
		
		private string _dept_name;
		
		private string _dept_type;
		
		private short _status;
		
		private EntitySet<mr_dept> _mr_dept2;
		
		private EntitySet<mr_dept_user> _mr_dept_user;
		
		private EntityRef<mr_dept> _mr_dept1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondept_idChanging(int value);
    partial void Ondept_idChanged();
    partial void Onparent_idChanging(System.Nullable<int> value);
    partial void Onparent_idChanged();
    partial void Ondept_nameChanging(string value);
    partial void Ondept_nameChanged();
    partial void Ondept_typeChanging(string value);
    partial void Ondept_typeChanged();
    partial void OnstatusChanging(short value);
    partial void OnstatusChanged();
    #endregion
		
		public mr_dept()
		{
			this._mr_dept2 = new EntitySet<mr_dept>(new Action<mr_dept>(this.attach_mr_dept2), new Action<mr_dept>(this.detach_mr_dept2));
			this._mr_dept_user = new EntitySet<mr_dept_user>(new Action<mr_dept_user>(this.attach_mr_dept_user), new Action<mr_dept_user>(this.detach_mr_dept_user));
			this._mr_dept1 = default(EntityRef<mr_dept>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dept_id
		{
			get
			{
				return this._dept_id;
			}
			set
			{
				if ((this._dept_id != value))
				{
					this.Ondept_idChanging(value);
					this.SendPropertyChanging();
					this._dept_id = value;
					this.SendPropertyChanged("dept_id");
					this.Ondept_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int")]
		public System.Nullable<int> parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					if (this._mr_dept1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string dept_name
		{
			get
			{
				return this._dept_name;
			}
			set
			{
				if ((this._dept_name != value))
				{
					this.Ondept_nameChanging(value);
					this.SendPropertyChanging();
					this._dept_name = value;
					this.SendPropertyChanged("dept_name");
					this.Ondept_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_type", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string dept_type
		{
			get
			{
				return this._dept_type;
			}
			set
			{
				if ((this._dept_type != value))
				{
					this.Ondept_typeChanging(value);
					this.SendPropertyChanging();
					this._dept_type = value;
					this.SendPropertyChanged("dept_type");
					this.Ondept_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt NOT NULL")]
		public short status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_dept_mr_dept", Storage="_mr_dept2", ThisKey="dept_id", OtherKey="parent_id")]
		public EntitySet<mr_dept> mr_dept2
		{
			get
			{
				return this._mr_dept2;
			}
			set
			{
				this._mr_dept2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_dept_mr_dept_user", Storage="_mr_dept_user", ThisKey="dept_id", OtherKey="dept_id")]
		public EntitySet<mr_dept_user> mr_dept_user
		{
			get
			{
				return this._mr_dept_user;
			}
			set
			{
				this._mr_dept_user.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_dept_mr_dept", Storage="_mr_dept1", ThisKey="parent_id", OtherKey="dept_id", IsForeignKey=true)]
		public mr_dept mr_dept1
		{
			get
			{
				return this._mr_dept1.Entity;
			}
			set
			{
				mr_dept previousValue = this._mr_dept1.Entity;
				if (((previousValue != value) 
							|| (this._mr_dept1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_dept1.Entity = null;
						previousValue.mr_dept2.Remove(this);
					}
					this._mr_dept1.Entity = value;
					if ((value != null))
					{
						value.mr_dept2.Add(this);
						this._parent_id = value.dept_id;
					}
					else
					{
						this._parent_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("mr_dept1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mr_dept2(mr_dept entity)
		{
			this.SendPropertyChanging();
			entity.mr_dept1 = this;
		}
		
		private void detach_mr_dept2(mr_dept entity)
		{
			this.SendPropertyChanging();
			entity.mr_dept1 = null;
		}
		
		private void attach_mr_dept_user(mr_dept_user entity)
		{
			this.SendPropertyChanging();
			entity.mr_dept = this;
		}
		
		private void detach_mr_dept_user(mr_dept_user entity)
		{
			this.SendPropertyChanging();
			entity.mr_dept = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mr_dept_user")]
	public partial class mr_dept_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dept_id;
		
		private int _user_id;
		
		private int _permission_data;
		
		private EntityRef<mr_dept> _mr_dept;
		
		private EntityRef<mr_user> _mr_user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondept_idChanging(int value);
    partial void Ondept_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onpermission_dataChanging(int value);
    partial void Onpermission_dataChanged();
    #endregion
		
		public mr_dept_user()
		{
			this._mr_dept = default(EntityRef<mr_dept>);
			this._mr_user = default(EntityRef<mr_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int dept_id
		{
			get
			{
				return this._dept_id;
			}
			set
			{
				if ((this._dept_id != value))
				{
					if (this._mr_dept.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondept_idChanging(value);
					this.SendPropertyChanging();
					this._dept_id = value;
					this.SendPropertyChanged("dept_id");
					this.Ondept_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._mr_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission_data", DbType="Int NOT NULL")]
		public int permission_data
		{
			get
			{
				return this._permission_data;
			}
			set
			{
				if ((this._permission_data != value))
				{
					this.Onpermission_dataChanging(value);
					this.SendPropertyChanging();
					this._permission_data = value;
					this.SendPropertyChanged("permission_data");
					this.Onpermission_dataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_dept_mr_dept_user", Storage="_mr_dept", ThisKey="dept_id", OtherKey="dept_id", IsForeignKey=true)]
		public mr_dept mr_dept
		{
			get
			{
				return this._mr_dept.Entity;
			}
			set
			{
				mr_dept previousValue = this._mr_dept.Entity;
				if (((previousValue != value) 
							|| (this._mr_dept.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_dept.Entity = null;
						previousValue.mr_dept_user.Remove(this);
					}
					this._mr_dept.Entity = value;
					if ((value != null))
					{
						value.mr_dept_user.Add(this);
						this._dept_id = value.dept_id;
					}
					else
					{
						this._dept_id = default(int);
					}
					this.SendPropertyChanged("mr_dept");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_user_mr_dept_user", Storage="_mr_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public mr_user mr_user
		{
			get
			{
				return this._mr_user.Entity;
			}
			set
			{
				mr_user previousValue = this._mr_user.Entity;
				if (((previousValue != value) 
							|| (this._mr_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_user.Entity = null;
						previousValue.mr_dept_user.Remove(this);
					}
					this._mr_user.Entity = value;
					if ((value != null))
					{
						value.mr_dept_user.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("mr_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mr_module")]
	public partial class mr_module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _module_id;
		
		private System.Nullable<int> _parent_id;
		
		private string _module_name;
		
		private short _status;
		
		private EntitySet<mr_action> _mr_action;
		
		private EntitySet<mr_module> _mr_module2;
		
		private EntitySet<mr_role_module> _mr_role_module;
		
		private EntitySet<mr_user_module> _mr_user_module;
		
		private EntityRef<mr_module> _mr_module1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmodule_idChanging(int value);
    partial void Onmodule_idChanged();
    partial void Onparent_idChanging(System.Nullable<int> value);
    partial void Onparent_idChanged();
    partial void Onmodule_nameChanging(string value);
    partial void Onmodule_nameChanged();
    partial void OnstatusChanging(short value);
    partial void OnstatusChanged();
    #endregion
		
		public mr_module()
		{
			this._mr_action = new EntitySet<mr_action>(new Action<mr_action>(this.attach_mr_action), new Action<mr_action>(this.detach_mr_action));
			this._mr_module2 = new EntitySet<mr_module>(new Action<mr_module>(this.attach_mr_module2), new Action<mr_module>(this.detach_mr_module2));
			this._mr_role_module = new EntitySet<mr_role_module>(new Action<mr_role_module>(this.attach_mr_role_module), new Action<mr_role_module>(this.detach_mr_role_module));
			this._mr_user_module = new EntitySet<mr_user_module>(new Action<mr_user_module>(this.attach_mr_user_module), new Action<mr_user_module>(this.detach_mr_user_module));
			this._mr_module1 = default(EntityRef<mr_module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int module_id
		{
			get
			{
				return this._module_id;
			}
			set
			{
				if ((this._module_id != value))
				{
					this.Onmodule_idChanging(value);
					this.SendPropertyChanging();
					this._module_id = value;
					this.SendPropertyChanged("module_id");
					this.Onmodule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int")]
		public System.Nullable<int> parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					if (this._mr_module1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string module_name
		{
			get
			{
				return this._module_name;
			}
			set
			{
				if ((this._module_name != value))
				{
					this.Onmodule_nameChanging(value);
					this.SendPropertyChanging();
					this._module_name = value;
					this.SendPropertyChanged("module_name");
					this.Onmodule_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt NOT NULL")]
		public short status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_module_mr_action", Storage="_mr_action", ThisKey="module_id", OtherKey="module_id")]
		public EntitySet<mr_action> mr_action
		{
			get
			{
				return this._mr_action;
			}
			set
			{
				this._mr_action.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_module_mr_module", Storage="_mr_module2", ThisKey="module_id", OtherKey="parent_id")]
		public EntitySet<mr_module> mr_module2
		{
			get
			{
				return this._mr_module2;
			}
			set
			{
				this._mr_module2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_module_mr_role_module", Storage="_mr_role_module", ThisKey="module_id", OtherKey="module_id")]
		public EntitySet<mr_role_module> mr_role_module
		{
			get
			{
				return this._mr_role_module;
			}
			set
			{
				this._mr_role_module.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_module_mr_user_module", Storage="_mr_user_module", ThisKey="module_id", OtherKey="module_id")]
		public EntitySet<mr_user_module> mr_user_module
		{
			get
			{
				return this._mr_user_module;
			}
			set
			{
				this._mr_user_module.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_module_mr_module", Storage="_mr_module1", ThisKey="parent_id", OtherKey="module_id", IsForeignKey=true)]
		public mr_module mr_module1
		{
			get
			{
				return this._mr_module1.Entity;
			}
			set
			{
				mr_module previousValue = this._mr_module1.Entity;
				if (((previousValue != value) 
							|| (this._mr_module1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_module1.Entity = null;
						previousValue.mr_module2.Remove(this);
					}
					this._mr_module1.Entity = value;
					if ((value != null))
					{
						value.mr_module2.Add(this);
						this._parent_id = value.module_id;
					}
					else
					{
						this._parent_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("mr_module1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mr_action(mr_action entity)
		{
			this.SendPropertyChanging();
			entity.mr_module = this;
		}
		
		private void detach_mr_action(mr_action entity)
		{
			this.SendPropertyChanging();
			entity.mr_module = null;
		}
		
		private void attach_mr_module2(mr_module entity)
		{
			this.SendPropertyChanging();
			entity.mr_module1 = this;
		}
		
		private void detach_mr_module2(mr_module entity)
		{
			this.SendPropertyChanging();
			entity.mr_module1 = null;
		}
		
		private void attach_mr_role_module(mr_role_module entity)
		{
			this.SendPropertyChanging();
			entity.mr_module = this;
		}
		
		private void detach_mr_role_module(mr_role_module entity)
		{
			this.SendPropertyChanging();
			entity.mr_module = null;
		}
		
		private void attach_mr_user_module(mr_user_module entity)
		{
			this.SendPropertyChanging();
			entity.mr_module = this;
		}
		
		private void detach_mr_user_module(mr_user_module entity)
		{
			this.SendPropertyChanging();
			entity.mr_module = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mr_permission")]
	public partial class mr_permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _permission_id;
		
		private string _permission_name;
		
		private string _permission_desc;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpermission_idChanging(int value);
    partial void Onpermission_idChanged();
    partial void Onpermission_nameChanging(string value);
    partial void Onpermission_nameChanged();
    partial void Onpermission_descChanging(string value);
    partial void Onpermission_descChanged();
    #endregion
		
		public mr_permission()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int permission_id
		{
			get
			{
				return this._permission_id;
			}
			set
			{
				if ((this._permission_id != value))
				{
					this.Onpermission_idChanging(value);
					this.SendPropertyChanging();
					this._permission_id = value;
					this.SendPropertyChanged("permission_id");
					this.Onpermission_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string permission_name
		{
			get
			{
				return this._permission_name;
			}
			set
			{
				if ((this._permission_name != value))
				{
					this.Onpermission_nameChanging(value);
					this.SendPropertyChanging();
					this._permission_name = value;
					this.SendPropertyChanged("permission_name");
					this.Onpermission_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission_desc", DbType="NVarChar(100)")]
		public string permission_desc
		{
			get
			{
				return this._permission_desc;
			}
			set
			{
				if ((this._permission_desc != value))
				{
					this.Onpermission_descChanging(value);
					this.SendPropertyChanging();
					this._permission_desc = value;
					this.SendPropertyChanged("permission_desc");
					this.Onpermission_descChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mr_role")]
	public partial class mr_role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _role_id;
		
		private string _role_name;
		
		private short _status;
		
		private EntitySet<mr_user_role> _mr_user_role;
		
		private EntitySet<mr_role_action> _mr_role_action;
		
		private EntitySet<mr_role_module> _mr_role_module;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    partial void Onrole_nameChanging(string value);
    partial void Onrole_nameChanged();
    partial void OnstatusChanging(short value);
    partial void OnstatusChanged();
    #endregion
		
		public mr_role()
		{
			this._mr_user_role = new EntitySet<mr_user_role>(new Action<mr_user_role>(this.attach_mr_user_role), new Action<mr_user_role>(this.detach_mr_user_role));
			this._mr_role_action = new EntitySet<mr_role_action>(new Action<mr_role_action>(this.attach_mr_role_action), new Action<mr_role_action>(this.detach_mr_role_action));
			this._mr_role_module = new EntitySet<mr_role_module>(new Action<mr_role_module>(this.attach_mr_role_module), new Action<mr_role_module>(this.detach_mr_role_module));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string role_name
		{
			get
			{
				return this._role_name;
			}
			set
			{
				if ((this._role_name != value))
				{
					this.Onrole_nameChanging(value);
					this.SendPropertyChanging();
					this._role_name = value;
					this.SendPropertyChanged("role_name");
					this.Onrole_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt NOT NULL")]
		public short status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_role_mr_user_role", Storage="_mr_user_role", ThisKey="role_id", OtherKey="role_id")]
		public EntitySet<mr_user_role> mr_user_role
		{
			get
			{
				return this._mr_user_role;
			}
			set
			{
				this._mr_user_role.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_role_mr_role_action", Storage="_mr_role_action", ThisKey="role_id", OtherKey="role_id")]
		public EntitySet<mr_role_action> mr_role_action
		{
			get
			{
				return this._mr_role_action;
			}
			set
			{
				this._mr_role_action.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_role_mr_role_module", Storage="_mr_role_module", ThisKey="role_id", OtherKey="role_id")]
		public EntitySet<mr_role_module> mr_role_module
		{
			get
			{
				return this._mr_role_module;
			}
			set
			{
				this._mr_role_module.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mr_user_role(mr_user_role entity)
		{
			this.SendPropertyChanging();
			entity.mr_role = this;
		}
		
		private void detach_mr_user_role(mr_user_role entity)
		{
			this.SendPropertyChanging();
			entity.mr_role = null;
		}
		
		private void attach_mr_role_action(mr_role_action entity)
		{
			this.SendPropertyChanging();
			entity.mr_role = this;
		}
		
		private void detach_mr_role_action(mr_role_action entity)
		{
			this.SendPropertyChanging();
			entity.mr_role = null;
		}
		
		private void attach_mr_role_module(mr_role_module entity)
		{
			this.SendPropertyChanging();
			entity.mr_role = this;
		}
		
		private void detach_mr_role_module(mr_role_module entity)
		{
			this.SendPropertyChanging();
			entity.mr_role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mr_role_action")]
	public partial class mr_role_action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _role_id;
		
		private int _action_id;
		
		private EntityRef<mr_action> _mr_action;
		
		private EntityRef<mr_role> _mr_role;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    partial void Onaction_idChanging(int value);
    partial void Onaction_idChanged();
    #endregion
		
		public mr_role_action()
		{
			this._mr_action = default(EntityRef<mr_action>);
			this._mr_role = default(EntityRef<mr_role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					if (this._mr_role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int action_id
		{
			get
			{
				return this._action_id;
			}
			set
			{
				if ((this._action_id != value))
				{
					if (this._mr_action.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaction_idChanging(value);
					this.SendPropertyChanging();
					this._action_id = value;
					this.SendPropertyChanged("action_id");
					this.Onaction_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_action_mr_role_action", Storage="_mr_action", ThisKey="action_id", OtherKey="action_id", IsForeignKey=true)]
		public mr_action mr_action
		{
			get
			{
				return this._mr_action.Entity;
			}
			set
			{
				mr_action previousValue = this._mr_action.Entity;
				if (((previousValue != value) 
							|| (this._mr_action.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_action.Entity = null;
						previousValue.mr_role_action.Remove(this);
					}
					this._mr_action.Entity = value;
					if ((value != null))
					{
						value.mr_role_action.Add(this);
						this._action_id = value.action_id;
					}
					else
					{
						this._action_id = default(int);
					}
					this.SendPropertyChanged("mr_action");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_role_mr_role_action", Storage="_mr_role", ThisKey="role_id", OtherKey="role_id", IsForeignKey=true)]
		public mr_role mr_role
		{
			get
			{
				return this._mr_role.Entity;
			}
			set
			{
				mr_role previousValue = this._mr_role.Entity;
				if (((previousValue != value) 
							|| (this._mr_role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_role.Entity = null;
						previousValue.mr_role_action.Remove(this);
					}
					this._mr_role.Entity = value;
					if ((value != null))
					{
						value.mr_role_action.Add(this);
						this._role_id = value.role_id;
					}
					else
					{
						this._role_id = default(int);
					}
					this.SendPropertyChanged("mr_role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mr_role_module")]
	public partial class mr_role_module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _role_id;
		
		private int _module_id;
		
		private EntityRef<mr_module> _mr_module;
		
		private EntityRef<mr_role> _mr_role;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    partial void Onmodule_idChanging(int value);
    partial void Onmodule_idChanged();
    #endregion
		
		public mr_role_module()
		{
			this._mr_module = default(EntityRef<mr_module>);
			this._mr_role = default(EntityRef<mr_role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					if (this._mr_role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int module_id
		{
			get
			{
				return this._module_id;
			}
			set
			{
				if ((this._module_id != value))
				{
					if (this._mr_module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmodule_idChanging(value);
					this.SendPropertyChanging();
					this._module_id = value;
					this.SendPropertyChanged("module_id");
					this.Onmodule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_module_mr_role_module", Storage="_mr_module", ThisKey="module_id", OtherKey="module_id", IsForeignKey=true)]
		public mr_module mr_module
		{
			get
			{
				return this._mr_module.Entity;
			}
			set
			{
				mr_module previousValue = this._mr_module.Entity;
				if (((previousValue != value) 
							|| (this._mr_module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_module.Entity = null;
						previousValue.mr_role_module.Remove(this);
					}
					this._mr_module.Entity = value;
					if ((value != null))
					{
						value.mr_role_module.Add(this);
						this._module_id = value.module_id;
					}
					else
					{
						this._module_id = default(int);
					}
					this.SendPropertyChanged("mr_module");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_role_mr_role_module", Storage="_mr_role", ThisKey="role_id", OtherKey="role_id", IsForeignKey=true)]
		public mr_role mr_role
		{
			get
			{
				return this._mr_role.Entity;
			}
			set
			{
				mr_role previousValue = this._mr_role.Entity;
				if (((previousValue != value) 
							|| (this._mr_role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_role.Entity = null;
						previousValue.mr_role_module.Remove(this);
					}
					this._mr_role.Entity = value;
					if ((value != null))
					{
						value.mr_role_module.Add(this);
						this._role_id = value.role_id;
					}
					else
					{
						this._role_id = default(int);
					}
					this.SendPropertyChanged("mr_role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mr_user")]
	public partial class mr_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _user_name;
		
		private short _status;
		
		private EntitySet<mr_user_role> _mr_user_role;
		
		private EntitySet<mr_dept_user> _mr_dept_user;
		
		private EntitySet<mr_user_action> _mr_user_action;
		
		private EntitySet<mr_user_module> _mr_user_module;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void OnstatusChanging(short value);
    partial void OnstatusChanged();
    #endregion
		
		public mr_user()
		{
			this._mr_user_role = new EntitySet<mr_user_role>(new Action<mr_user_role>(this.attach_mr_user_role), new Action<mr_user_role>(this.detach_mr_user_role));
			this._mr_dept_user = new EntitySet<mr_dept_user>(new Action<mr_dept_user>(this.attach_mr_dept_user), new Action<mr_dept_user>(this.detach_mr_dept_user));
			this._mr_user_action = new EntitySet<mr_user_action>(new Action<mr_user_action>(this.attach_mr_user_action), new Action<mr_user_action>(this.detach_mr_user_action));
			this._mr_user_module = new EntitySet<mr_user_module>(new Action<mr_user_module>(this.attach_mr_user_module), new Action<mr_user_module>(this.detach_mr_user_module));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt NOT NULL")]
		public short status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_user_mr_user_role", Storage="_mr_user_role", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<mr_user_role> mr_user_role
		{
			get
			{
				return this._mr_user_role;
			}
			set
			{
				this._mr_user_role.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_user_mr_dept_user", Storage="_mr_dept_user", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<mr_dept_user> mr_dept_user
		{
			get
			{
				return this._mr_dept_user;
			}
			set
			{
				this._mr_dept_user.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_user_mr_user_action", Storage="_mr_user_action", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<mr_user_action> mr_user_action
		{
			get
			{
				return this._mr_user_action;
			}
			set
			{
				this._mr_user_action.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_user_mr_user_module", Storage="_mr_user_module", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<mr_user_module> mr_user_module
		{
			get
			{
				return this._mr_user_module;
			}
			set
			{
				this._mr_user_module.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mr_user_role(mr_user_role entity)
		{
			this.SendPropertyChanging();
			entity.mr_user = this;
		}
		
		private void detach_mr_user_role(mr_user_role entity)
		{
			this.SendPropertyChanging();
			entity.mr_user = null;
		}
		
		private void attach_mr_dept_user(mr_dept_user entity)
		{
			this.SendPropertyChanging();
			entity.mr_user = this;
		}
		
		private void detach_mr_dept_user(mr_dept_user entity)
		{
			this.SendPropertyChanging();
			entity.mr_user = null;
		}
		
		private void attach_mr_user_action(mr_user_action entity)
		{
			this.SendPropertyChanging();
			entity.mr_user = this;
		}
		
		private void detach_mr_user_action(mr_user_action entity)
		{
			this.SendPropertyChanging();
			entity.mr_user = null;
		}
		
		private void attach_mr_user_module(mr_user_module entity)
		{
			this.SendPropertyChanging();
			entity.mr_user = this;
		}
		
		private void detach_mr_user_module(mr_user_module entity)
		{
			this.SendPropertyChanging();
			entity.mr_user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mr_user_action")]
	public partial class mr_user_action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private int _action_id;
		
		private EntityRef<mr_action> _mr_action;
		
		private EntityRef<mr_user> _mr_user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onaction_idChanging(int value);
    partial void Onaction_idChanged();
    #endregion
		
		public mr_user_action()
		{
			this._mr_action = default(EntityRef<mr_action>);
			this._mr_user = default(EntityRef<mr_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._mr_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int action_id
		{
			get
			{
				return this._action_id;
			}
			set
			{
				if ((this._action_id != value))
				{
					if (this._mr_action.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaction_idChanging(value);
					this.SendPropertyChanging();
					this._action_id = value;
					this.SendPropertyChanged("action_id");
					this.Onaction_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_action_mr_user_action", Storage="_mr_action", ThisKey="action_id", OtherKey="action_id", IsForeignKey=true)]
		public mr_action mr_action
		{
			get
			{
				return this._mr_action.Entity;
			}
			set
			{
				mr_action previousValue = this._mr_action.Entity;
				if (((previousValue != value) 
							|| (this._mr_action.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_action.Entity = null;
						previousValue.mr_user_action.Remove(this);
					}
					this._mr_action.Entity = value;
					if ((value != null))
					{
						value.mr_user_action.Add(this);
						this._action_id = value.action_id;
					}
					else
					{
						this._action_id = default(int);
					}
					this.SendPropertyChanged("mr_action");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_user_mr_user_action", Storage="_mr_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public mr_user mr_user
		{
			get
			{
				return this._mr_user.Entity;
			}
			set
			{
				mr_user previousValue = this._mr_user.Entity;
				if (((previousValue != value) 
							|| (this._mr_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_user.Entity = null;
						previousValue.mr_user_action.Remove(this);
					}
					this._mr_user.Entity = value;
					if ((value != null))
					{
						value.mr_user_action.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("mr_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mr_user_module")]
	public partial class mr_user_module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private int _module_id;
		
		private EntityRef<mr_module> _mr_module;
		
		private EntityRef<mr_user> _mr_user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onmodule_idChanging(int value);
    partial void Onmodule_idChanged();
    #endregion
		
		public mr_user_module()
		{
			this._mr_module = default(EntityRef<mr_module>);
			this._mr_user = default(EntityRef<mr_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._mr_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int module_id
		{
			get
			{
				return this._module_id;
			}
			set
			{
				if ((this._module_id != value))
				{
					if (this._mr_module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmodule_idChanging(value);
					this.SendPropertyChanging();
					this._module_id = value;
					this.SendPropertyChanged("module_id");
					this.Onmodule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_module_mr_user_module", Storage="_mr_module", ThisKey="module_id", OtherKey="module_id", IsForeignKey=true)]
		public mr_module mr_module
		{
			get
			{
				return this._mr_module.Entity;
			}
			set
			{
				mr_module previousValue = this._mr_module.Entity;
				if (((previousValue != value) 
							|| (this._mr_module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_module.Entity = null;
						previousValue.mr_user_module.Remove(this);
					}
					this._mr_module.Entity = value;
					if ((value != null))
					{
						value.mr_user_module.Add(this);
						this._module_id = value.module_id;
					}
					else
					{
						this._module_id = default(int);
					}
					this.SendPropertyChanged("mr_module");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mr_user_mr_user_module", Storage="_mr_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public mr_user mr_user
		{
			get
			{
				return this._mr_user.Entity;
			}
			set
			{
				mr_user previousValue = this._mr_user.Entity;
				if (((previousValue != value) 
							|| (this._mr_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mr_user.Entity = null;
						previousValue.mr_user_module.Remove(this);
					}
					this._mr_user.Entity = value;
					if ((value != null))
					{
						value.mr_user_module.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("mr_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class MyRule_RoleAccessAbleActionResult
	{
		
		private int _action_id;
		
		private int _module_id;
		
		private string _action_name;
		
		private byte _default_rule;
		
		private short _status;
		
		public MyRule_RoleAccessAbleActionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_id", DbType="Int NOT NULL")]
		public int action_id
		{
			get
			{
				return this._action_id;
			}
			set
			{
				if ((this._action_id != value))
				{
					this._action_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_id", DbType="Int NOT NULL")]
		public int module_id
		{
			get
			{
				return this._module_id;
			}
			set
			{
				if ((this._module_id != value))
				{
					this._module_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string action_name
		{
			get
			{
				return this._action_name;
			}
			set
			{
				if ((this._action_name != value))
				{
					this._action_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_default_rule", DbType="TinyInt NOT NULL")]
		public byte default_rule
		{
			get
			{
				return this._default_rule;
			}
			set
			{
				if ((this._default_rule != value))
				{
					this._default_rule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt NOT NULL")]
		public short status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
	}
	
	public partial class MyRule_UserAccessAbleActionResult
	{
		
		private int _action_id;
		
		private int _module_id;
		
		private string _action_name;
		
		private byte _default_rule;
		
		private short _status;
		
		public MyRule_UserAccessAbleActionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_id", DbType="Int NOT NULL")]
		public int action_id
		{
			get
			{
				return this._action_id;
			}
			set
			{
				if ((this._action_id != value))
				{
					this._action_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_id", DbType="Int NOT NULL")]
		public int module_id
		{
			get
			{
				return this._module_id;
			}
			set
			{
				if ((this._module_id != value))
				{
					this._module_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string action_name
		{
			get
			{
				return this._action_name;
			}
			set
			{
				if ((this._action_name != value))
				{
					this._action_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_default_rule", DbType="TinyInt NOT NULL")]
		public byte default_rule
		{
			get
			{
				return this._default_rule;
			}
			set
			{
				if ((this._default_rule != value))
				{
					this._default_rule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt NOT NULL")]
		public short status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
	}
	
	public partial class MyRule_UserOwnRoleResult
	{
		
		private int _role_id;
		
		private string _role_name;
		
		private short _status;
		
		public MyRule_UserOwnRoleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL")]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					this._role_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string role_name
		{
			get
			{
				return this._role_name;
			}
			set
			{
				if ((this._role_name != value))
				{
					this._role_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt NOT NULL")]
		public short status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
	}
	
	public partial class MyRule_UserAccessAbleDeptResult
	{
		
		private System.Nullable<int> _dept_id;
		
		private System.Nullable<int> _parent_id;
		
		private string _dept_name;
		
		private string _status;
		
		private System.Nullable<int> _permission_data;
		
		public MyRule_UserAccessAbleDeptResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_id", DbType="Int")]
		public System.Nullable<int> dept_id
		{
			get
			{
				return this._dept_id;
			}
			set
			{
				if ((this._dept_id != value))
				{
					this._dept_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int")]
		public System.Nullable<int> parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					this._parent_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_name", DbType="NVarChar(20)")]
		public string dept_name
		{
			get
			{
				return this._dept_name;
			}
			set
			{
				if ((this._dept_name != value))
				{
					this._dept_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(10)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission_data", DbType="Int")]
		public System.Nullable<int> permission_data
		{
			get
			{
				return this._permission_data;
			}
			set
			{
				if ((this._permission_data != value))
				{
					this._permission_data = value;
				}
			}
		}
	}
	
	public partial class MyRule_AllUserAccessAbleActionResult
	{
		
		private int _action_id;
		
		private int _module_id;
		
		private string _action_name;
		
		private byte _default_rule;
		
		private short _status;
		
		public MyRule_AllUserAccessAbleActionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_id", DbType="Int NOT NULL")]
		public int action_id
		{
			get
			{
				return this._action_id;
			}
			set
			{
				if ((this._action_id != value))
				{
					this._action_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_id", DbType="Int NOT NULL")]
		public int module_id
		{
			get
			{
				return this._module_id;
			}
			set
			{
				if ((this._module_id != value))
				{
					this._module_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string action_name
		{
			get
			{
				return this._action_name;
			}
			set
			{
				if ((this._action_name != value))
				{
					this._action_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_default_rule", DbType="TinyInt NOT NULL")]
		public byte default_rule
		{
			get
			{
				return this._default_rule;
			}
			set
			{
				if ((this._default_rule != value))
				{
					this._default_rule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt NOT NULL")]
		public short status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
	}
	
	public partial class MyRule_AllUserAccessAbleModuleResult
	{
		
		private System.Nullable<int> _module_id;
		
		private System.Nullable<int> _parent_id;
		
		private string _module_name;
		
		private System.Nullable<short> _status;
		
		public MyRule_AllUserAccessAbleModuleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_id", DbType="Int")]
		public System.Nullable<int> module_id
		{
			get
			{
				return this._module_id;
			}
			set
			{
				if ((this._module_id != value))
				{
					this._module_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int")]
		public System.Nullable<int> parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					this._parent_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_name", DbType="NVarChar(20)")]
		public string module_name
		{
			get
			{
				return this._module_name;
			}
			set
			{
				if ((this._module_name != value))
				{
					this._module_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt")]
		public System.Nullable<short> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
	}
	
	public partial class MyRule_RoleAccessAbleModuleResult
	{
		
		private System.Nullable<int> _module_id;
		
		private System.Nullable<int> _parent_id;
		
		private string _module_name;
		
		private System.Nullable<short> _status;
		
		public MyRule_RoleAccessAbleModuleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_id", DbType="Int")]
		public System.Nullable<int> module_id
		{
			get
			{
				return this._module_id;
			}
			set
			{
				if ((this._module_id != value))
				{
					this._module_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int")]
		public System.Nullable<int> parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					this._parent_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_name", DbType="NVarChar(20)")]
		public string module_name
		{
			get
			{
				return this._module_name;
			}
			set
			{
				if ((this._module_name != value))
				{
					this._module_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt")]
		public System.Nullable<short> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
	}
	
	public partial class MyRule_UserAccessAbleModuleResult
	{
		
		private System.Nullable<int> _module_id;
		
		private System.Nullable<int> _parent_id;
		
		private string _module_name;
		
		private System.Nullable<short> _status;
		
		public MyRule_UserAccessAbleModuleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_id", DbType="Int")]
		public System.Nullable<int> module_id
		{
			get
			{
				return this._module_id;
			}
			set
			{
				if ((this._module_id != value))
				{
					this._module_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int")]
		public System.Nullable<int> parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					this._parent_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_name", DbType="NVarChar(20)")]
		public string module_name
		{
			get
			{
				return this._module_name;
			}
			set
			{
				if ((this._module_name != value))
				{
					this._module_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt")]
		public System.Nullable<short> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
