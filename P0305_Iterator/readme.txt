C# Iterator迭代器模式我们在平时的开发中应该经常用到。
不直接使用也会间接使用，
我们使用foreach语句来循环就是在间接的使用C# Iterator迭代器模式。


迭代器就像指针一样可以向前向后移动，在.NET中迭代器只能向后移动。



动机：在软件的构建过程中，集合对象内部结构常常变化各异。
但对于这些集合对象，我们希望在不暴露其内部结构的同时，可以让外部客户代码透明地访问其中包含的元素；
同时这种“透明遍历”也为“同一种算法在多种集合对象上进行操作”提供了可能。
使用面向对象技术将这种遍历机制抽象为“迭代器对象”为“应对变化中的集合对象”提供了一种优雅的方式。


意图：提供一种方法顺序访问一个集合对象中的各个元素，而不暴露该对象的内部表示。

