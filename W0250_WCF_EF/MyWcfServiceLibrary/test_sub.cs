//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace MyWcfServiceLibrary
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(test_main))]
    public partial class test_sub
    {
        #region Primitive Properties
        [DataMember]
        public virtual int id
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> main_id
        {
            get { return _main_id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_main_id != value)
                    {
                        if (test_main != null && test_main.id != value)
                        {
                            test_main = null;
                        }
                        _main_id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _main_id;
        [DataMember]
        public virtual string value
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
        
    
        [DataMember]
        public virtual test_main test_main
        {
            get { return _test_main; }
            set
            {
                if (!ReferenceEquals(_test_main, value))
                {
                    var previousValue = _test_main;
                    _test_main = value;
                    Fixuptest_main(previousValue);
                }
            }
        }
        private test_main _test_main;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void Fixuptest_main(test_main previousValue)
        {
            if (previousValue != null && previousValue.test_sub.Contains(this))
            {
                previousValue.test_sub.Remove(this);
            }
    
            if (test_main != null)
            {
                if (!test_main.test_sub.Contains(this))
                {
                    test_main.test_sub.Add(this);
                }
                if (main_id != test_main.id)
                {
                    main_id = test_main.id;
                }
            }
            else if (!_settingFK)
            {
                main_id = null;
            }
        }

        #endregion
    }
}
