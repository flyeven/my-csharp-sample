此项目是从 W0201_WCF_Detail 复制粘贴过来的。

本项目主要目的是用于测试 在使用NetTcpBinding绑定的服务上启动消息加密
因此排除掉 MyWCFService.Web 项目， 以及 MyWCFService.Client 中的 关于 basicHttpBinding 的代码 与 配置信息。


在使用NetTcpBinding绑定的服务上启动消息加密


================================================================================


在 MyWCFService.Hosting 项目中

1. 选择 App.config 文件， 然后 鼠标右键， 在弹出菜单中选择 “编辑 WCF 配置”
    （如果鼠标右键后，没有这个菜单选项，那么尝试 点击主菜单中的 “工具” --> “WCF 服务配置编辑器”  ）

2. 弹出窗口中，选择 “绑定”。

3. 创建一个新的使用NetTcpBinding的绑定。

4. 设置该绑定的名字为"ServiceTcpBindingConfig"，然后切换到 “安全性” 标签下。

5. 设置安全模式为 (Mode) "Message"，  加密采用为 (AlgorithmSuite) "Basic128"。
	该设置将使绑定使用消息层安全；用户将提示输入用户名和密码，所有的消息将使用128位算法的高级加密标准（AES）来加密。
	该算法被广泛采用，是因为其执行速度相对很快，而且在企业内部为消息提供了足够的保密性。
	但是，当你在互联网上发送消息时，请使用256位的算法（默认算法）。

注意：如果你先择安全模式为"None"，那么该绑定将不会加密数据，其他传输层和消息层的相关设置将被忽略。
如果选择"Transport"模式，那么绑定将采用传输层安全而非消息层安全。
如果选择"TransportWithMessageCredential"模式，那么在消息层实现用户身份验证，在传输层执行加密。
传输层加密比消息曾加密更有效，尽管传输层加密需要管理员做更多的设置


6. 选择 服务 --> 终结点 。 确认  bindingConfiguration  的设置， 为前面第 4步的 绑定的名字。

7. 保存配置文件。

8. 在Visual Studio 打开 app.config， 核对一下。


================================================================================

在 MyWCFService.Client 项目中

1. 选择 App.config 文件， 然后 鼠标右键， 在弹出菜单中选择 “编辑 WCF 配置”
    （如果鼠标右键后，没有这个菜单选项，那么尝试 点击主菜单中的 “工具” --> “WCF 服务配置编辑器”  ）

2. 找到 绑定， 	修改安全模式为"Message"，加密算法使用"Basic128"
	（也就是 客户端的  安全模式， 与 服务器一致）

3. 找到 客户端 --> 终结点 。 确认  bindingConfiguration  的设置， 为前面设定的 绑定的名字。

4. 保存配置文件。

5. 在Visual Studio 打开 app.config， 核对一下。



================================================================================

配置WCF服务跟踪消息 

1. 使用WCF配置工具打开 MyWCFService.Hosting 项目下的app.config文件，然后设置该服务的诊断信息： 
	LogEntireMessage属性指定追踪是否包括接收和发送消息的body部分；如果为true，那么将包含body部分。如果为false（默认值），那么将只包含Header部分。
	LogMessageAtServiceLevel如果设置为true，那么当消息到达服务和离开服务时开始追踪消息。如果你使用消息安全模式；在消息级别，当收到消息时，追踪将显示解密前的消息；当发送消息时，追踪将显示加密前的消息。
	LogMessageAtTransportLevel如果设置为true，在传输级别，接收和发送消息的消息将被追踪。如果你使用消息安全，在传输级别收发的消息是加密后的消息。如果你使用传输层安全，那么在接收消息时，将显示解密前的消息；在发送消息是，追踪将显示加密前的信息。  

	
2. 选择诊断下的追踪源，然后点击右键―创建新的追踪源。 
	WCF所有的追踪信息来自一个或多个追踪源。
	在本例中，你将使用WCF提供的MessageLogging源，其追踪消息。
	你还可以指定其他追踪源。比如ServcieModel源去追踪所有发生在服务上的事件（服务开始监听请求事件，接收请求事件，发送响应事件）。

3. 选择"System.ServiceModel.MessageLogging"为追踪源。并设置追踪级别为"Verbose" 

4. 选择诊断下的侦听器，然后右键，创建新的侦听器： 

5. 设置侦听器的名字为"MessageLog"，设置初始数据的存放地址  （InitData）

6. 设置TraceOutputOptions为None，设置方法为点击下拉箭头，然后情况所有复选框。 

7. 确保TypeName为System.Diagnostics.XmlWriterTraceListener 

8. 把在第三部设置的追踪源添加到该侦听器中来，
	操作方法：点击侦听器右下角的添加按钮，然后在添加追踪源对话框中选择"System.ServcieModel.MessageLogging"，
	再点击确定按钮。 

9. 保存app.config，然后退出WCF配置工具 



================================================================================


运行WCF服务和客户端，并检查追踪输出结果 

运行 VS2010 自带的  服务跟踪查看器， 来查看日志信息。


