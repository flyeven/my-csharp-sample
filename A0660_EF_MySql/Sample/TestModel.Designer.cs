//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("TestModel", "fk_test_score_course", "test_course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(A0660_EF_MySql.Sample.test_course), "test_score", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(A0660_EF_MySql.Sample.test_score), true)]
[assembly: EdmRelationshipAttribute("TestModel", "fk_test_sub", "test_main", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(A0660_EF_MySql.Sample.test_main), "test_sub", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(A0660_EF_MySql.Sample.test_sub), true)]
[assembly: EdmRelationshipAttribute("TestModel", "fk_test_sub_s", "test_main", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(A0660_EF_MySql.Sample.test_main), "test_sub_s", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(A0660_EF_MySql.Sample.test_sub_s), true)]
[assembly: EdmRelationshipAttribute("TestModel", "fk_test_score_student", "test_student", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(A0660_EF_MySql.Sample.test_student), "test_score", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(A0660_EF_MySql.Sample.test_score), true)]
[assembly: EdmRelationshipAttribute("TestModel", "fk_test_sub_of_sub", "test_sub_s", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(A0660_EF_MySql.Sample.test_sub_s), "test_sub_of_sub", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(A0660_EF_MySql.Sample.test_sub_of_sub), true)]

#endregion

namespace A0660_EF_MySql.Sample
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class TestEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“TestEntities”部分中的连接字符串初始化新 TestEntities 对象。
        /// </summary>
        public TestEntities() : base("name=TestEntities", "TestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 TestEntities 对象。
        /// </summary>
        public TestEntities(string connectionString) : base(connectionString, "TestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 TestEntities 对象。
        /// </summary>
        public TestEntities(EntityConnection connection) : base(connection, "TestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<sale_report> sale_report
        {
            get
            {
                if ((_sale_report == null))
                {
                    _sale_report = base.CreateObjectSet<sale_report>("sale_report");
                }
                return _sale_report;
            }
        }
        private ObjectSet<sale_report> _sale_report;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<test_auto_increment_tab> test_auto_increment_tab
        {
            get
            {
                if ((_test_auto_increment_tab == null))
                {
                    _test_auto_increment_tab = base.CreateObjectSet<test_auto_increment_tab>("test_auto_increment_tab");
                }
                return _test_auto_increment_tab;
            }
        }
        private ObjectSet<test_auto_increment_tab> _test_auto_increment_tab;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<test_course> test_course
        {
            get
            {
                if ((_test_course == null))
                {
                    _test_course = base.CreateObjectSet<test_course>("test_course");
                }
                return _test_course;
            }
        }
        private ObjectSet<test_course> _test_course;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<test_main> test_main
        {
            get
            {
                if ((_test_main == null))
                {
                    _test_main = base.CreateObjectSet<test_main>("test_main");
                }
                return _test_main;
            }
        }
        private ObjectSet<test_main> _test_main;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<test_score> test_score
        {
            get
            {
                if ((_test_score == null))
                {
                    _test_score = base.CreateObjectSet<test_score>("test_score");
                }
                return _test_score;
            }
        }
        private ObjectSet<test_score> _test_score;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<test_student> test_student
        {
            get
            {
                if ((_test_student == null))
                {
                    _test_student = base.CreateObjectSet<test_student>("test_student");
                }
                return _test_student;
            }
        }
        private ObjectSet<test_student> _test_student;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<test_sub> test_sub
        {
            get
            {
                if ((_test_sub == null))
                {
                    _test_sub = base.CreateObjectSet<test_sub>("test_sub");
                }
                return _test_sub;
            }
        }
        private ObjectSet<test_sub> _test_sub;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<test_sub_of_sub> test_sub_of_sub
        {
            get
            {
                if ((_test_sub_of_sub == null))
                {
                    _test_sub_of_sub = base.CreateObjectSet<test_sub_of_sub>("test_sub_of_sub");
                }
                return _test_sub_of_sub;
            }
        }
        private ObjectSet<test_sub_of_sub> _test_sub_of_sub;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<test_sub_s> test_sub_s
        {
            get
            {
                if ((_test_sub_s == null))
                {
                    _test_sub_s = base.CreateObjectSet<test_sub_s>("test_sub_s");
                }
                return _test_sub_s;
            }
        }
        private ObjectSet<test_sub_s> _test_sub_s;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<test_tab> test_tab
        {
            get
            {
                if ((_test_tab == null))
                {
                    _test_tab = base.CreateObjectSet<test_tab>("test_tab");
                }
                return _test_tab;
            }
        }
        private ObjectSet<test_tab> _test_tab;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<testprocresult> testprocresult
        {
            get
            {
                if ((_testprocresult == null))
                {
                    _testprocresult = base.CreateObjectSet<testprocresult>("testprocresult");
                }
                return _testprocresult;
            }
        }
        private ObjectSet<testprocresult> _testprocresult;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 sale_report EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTosale_report(sale_report sale_report)
        {
            base.AddObject("sale_report", sale_report);
        }
    
        /// <summary>
        /// 用于向 test_auto_increment_tab EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotest_auto_increment_tab(test_auto_increment_tab test_auto_increment_tab)
        {
            base.AddObject("test_auto_increment_tab", test_auto_increment_tab);
        }
    
        /// <summary>
        /// 用于向 test_course EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotest_course(test_course test_course)
        {
            base.AddObject("test_course", test_course);
        }
    
        /// <summary>
        /// 用于向 test_main EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotest_main(test_main test_main)
        {
            base.AddObject("test_main", test_main);
        }
    
        /// <summary>
        /// 用于向 test_score EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotest_score(test_score test_score)
        {
            base.AddObject("test_score", test_score);
        }
    
        /// <summary>
        /// 用于向 test_student EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotest_student(test_student test_student)
        {
            base.AddObject("test_student", test_student);
        }
    
        /// <summary>
        /// 用于向 test_sub EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotest_sub(test_sub test_sub)
        {
            base.AddObject("test_sub", test_sub);
        }
    
        /// <summary>
        /// 用于向 test_sub_of_sub EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotest_sub_of_sub(test_sub_of_sub test_sub_of_sub)
        {
            base.AddObject("test_sub_of_sub", test_sub_of_sub);
        }
    
        /// <summary>
        /// 用于向 test_sub_s EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotest_sub_s(test_sub_s test_sub_s)
        {
            base.AddObject("test_sub_s", test_sub_s);
        }
    
        /// <summary>
        /// 用于向 test_tab EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotest_tab(test_tab test_tab)
        {
            base.AddObject("test_tab", test_tab);
        }
    
        /// <summary>
        /// 用于向 testprocresult EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotestprocresult(testprocresult testprocresult)
        {
            base.AddObject("testprocresult", testprocresult);
        }

        #endregion

        #region 函数导入
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        /// <param name="vUserName">没有元数据文档可用。</param>
        /// <param name="vOutValue">没有元数据文档可用。</param>
        /// <param name="vInOutValue">没有元数据文档可用。</param>
        public ObjectResult<global::System.String> HelloWorld2(global::System.String vUserName, ObjectParameter vOutValue, ObjectParameter vInOutValue)
        {
            ObjectParameter vUserNameParameter;
            if (vUserName != null)
            {
                vUserNameParameter = new ObjectParameter("vUserName", vUserName);
            }
            else
            {
                vUserNameParameter = new ObjectParameter("vUserName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("HelloWorld2", vUserNameParameter, vOutValue, vInOutValue);
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectResult<testprocresult> TestProc()
        {
            return base.ExecuteFunction<testprocresult>("TestProc");
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<testprocresult> TestProc(MergeOption mergeOption)
        {
            return base.ExecuteFunction<testprocresult>("TestProc", mergeOption);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="sale_report")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sale_report : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 sale_report 对象。
        /// </summary>
        /// <param name="sALE_DATE">SALE_DATE 属性的初始值。</param>
        /// <param name="sALE_ITEM">SALE_ITEM 属性的初始值。</param>
        /// <param name="sALE_MONEY">SALE_MONEY 属性的初始值。</param>
        public static sale_report Createsale_report(global::System.DateTime sALE_DATE, global::System.String sALE_ITEM, global::System.Decimal sALE_MONEY)
        {
            sale_report sale_report = new sale_report();
            sale_report.SALE_DATE = sALE_DATE;
            sale_report.SALE_ITEM = sALE_ITEM;
            sale_report.SALE_MONEY = sALE_MONEY;
            return sale_report;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SALE_DATE
        {
            get
            {
                return _SALE_DATE;
            }
            set
            {
                if (_SALE_DATE != value)
                {
                    OnSALE_DATEChanging(value);
                    ReportPropertyChanging("SALE_DATE");
                    _SALE_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SALE_DATE");
                    OnSALE_DATEChanged();
                }
            }
        }
        private global::System.DateTime _SALE_DATE;
        partial void OnSALE_DATEChanging(global::System.DateTime value);
        partial void OnSALE_DATEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SALE_ITEM
        {
            get
            {
                return _SALE_ITEM;
            }
            set
            {
                if (_SALE_ITEM != value)
                {
                    OnSALE_ITEMChanging(value);
                    ReportPropertyChanging("SALE_ITEM");
                    _SALE_ITEM = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SALE_ITEM");
                    OnSALE_ITEMChanged();
                }
            }
        }
        private global::System.String _SALE_ITEM;
        partial void OnSALE_ITEMChanging(global::System.String value);
        partial void OnSALE_ITEMChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SALE_MONEY
        {
            get
            {
                return _SALE_MONEY;
            }
            set
            {
                OnSALE_MONEYChanging(value);
                ReportPropertyChanging("SALE_MONEY");
                _SALE_MONEY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SALE_MONEY");
                OnSALE_MONEYChanged();
            }
        }
        private global::System.Decimal _SALE_MONEY;
        partial void OnSALE_MONEYChanging(global::System.Decimal value);
        partial void OnSALE_MONEYChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="test_auto_increment_tab")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class test_auto_increment_tab : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 test_auto_increment_tab 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static test_auto_increment_tab Createtest_auto_increment_tab(global::System.Int32 id)
        {
            test_auto_increment_tab test_auto_increment_tab = new test_auto_increment_tab();
            test_auto_increment_tab.id = id;
            return test_auto_increment_tab;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="test_course")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class test_course : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 test_course 对象。
        /// </summary>
        /// <param name="course_code">course_code 属性的初始值。</param>
        /// <param name="course_name">course_name 属性的初始值。</param>
        public static test_course Createtest_course(global::System.Int32 course_code, global::System.String course_name)
        {
            test_course test_course = new test_course();
            test_course.course_code = course_code;
            test_course.course_name = course_name;
            return test_course;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 course_code
        {
            get
            {
                return _course_code;
            }
            set
            {
                if (_course_code != value)
                {
                    Oncourse_codeChanging(value);
                    ReportPropertyChanging("course_code");
                    _course_code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("course_code");
                    Oncourse_codeChanged();
                }
            }
        }
        private global::System.Int32 _course_code;
        partial void Oncourse_codeChanging(global::System.Int32 value);
        partial void Oncourse_codeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String course_name
        {
            get
            {
                return _course_name;
            }
            set
            {
                Oncourse_nameChanging(value);
                ReportPropertyChanging("course_name");
                _course_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("course_name");
                Oncourse_nameChanged();
            }
        }
        private global::System.String _course_name;
        partial void Oncourse_nameChanging(global::System.String value);
        partial void Oncourse_nameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "fk_test_score_course", "test_score")]
        public EntityCollection<test_score> test_score
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<test_score>("TestModel.fk_test_score_course", "test_score");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<test_score>("TestModel.fk_test_score_course", "test_score", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="test_main")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class test_main : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 test_main 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static test_main Createtest_main(global::System.Int32 id)
        {
            test_main test_main = new test_main();
            test_main.id = id;
            return test_main;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "fk_test_sub", "test_sub")]
        public EntityCollection<test_sub> test_sub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<test_sub>("TestModel.fk_test_sub", "test_sub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<test_sub>("TestModel.fk_test_sub", "test_sub", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "fk_test_sub_s", "test_sub_s")]
        public EntityCollection<test_sub_s> test_sub_s
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<test_sub_s>("TestModel.fk_test_sub_s", "test_sub_s");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<test_sub_s>("TestModel.fk_test_sub_s", "test_sub_s", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="test_score")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class test_score : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 test_score 对象。
        /// </summary>
        /// <param name="student_code">student_code 属性的初始值。</param>
        /// <param name="course_code">course_code 属性的初始值。</param>
        /// <param name="score_value">score_value 属性的初始值。</param>
        public static test_score Createtest_score(global::System.Int32 student_code, global::System.Int32 course_code, global::System.Int32 score_value)
        {
            test_score test_score = new test_score();
            test_score.student_code = student_code;
            test_score.course_code = course_code;
            test_score.score_value = score_value;
            return test_score;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 student_code
        {
            get
            {
                return _student_code;
            }
            set
            {
                if (_student_code != value)
                {
                    Onstudent_codeChanging(value);
                    ReportPropertyChanging("student_code");
                    _student_code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("student_code");
                    Onstudent_codeChanged();
                }
            }
        }
        private global::System.Int32 _student_code;
        partial void Onstudent_codeChanging(global::System.Int32 value);
        partial void Onstudent_codeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 course_code
        {
            get
            {
                return _course_code;
            }
            set
            {
                if (_course_code != value)
                {
                    Oncourse_codeChanging(value);
                    ReportPropertyChanging("course_code");
                    _course_code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("course_code");
                    Oncourse_codeChanged();
                }
            }
        }
        private global::System.Int32 _course_code;
        partial void Oncourse_codeChanging(global::System.Int32 value);
        partial void Oncourse_codeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 score_value
        {
            get
            {
                return _score_value;
            }
            set
            {
                Onscore_valueChanging(value);
                ReportPropertyChanging("score_value");
                _score_value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("score_value");
                Onscore_valueChanged();
            }
        }
        private global::System.Int32 _score_value;
        partial void Onscore_valueChanging(global::System.Int32 value);
        partial void Onscore_valueChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "fk_test_score_course", "test_course")]
        public test_course test_course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_course>("TestModel.fk_test_score_course", "test_course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_course>("TestModel.fk_test_score_course", "test_course").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<test_course> test_courseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_course>("TestModel.fk_test_score_course", "test_course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<test_course>("TestModel.fk_test_score_course", "test_course", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "fk_test_score_student", "test_student")]
        public test_student test_student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_student>("TestModel.fk_test_score_student", "test_student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_student>("TestModel.fk_test_score_student", "test_student").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<test_student> test_studentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_student>("TestModel.fk_test_score_student", "test_student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<test_student>("TestModel.fk_test_score_student", "test_student", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="test_student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class test_student : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 test_student 对象。
        /// </summary>
        /// <param name="student_code">student_code 属性的初始值。</param>
        /// <param name="student_name">student_name 属性的初始值。</param>
        public static test_student Createtest_student(global::System.Int32 student_code, global::System.String student_name)
        {
            test_student test_student = new test_student();
            test_student.student_code = student_code;
            test_student.student_name = student_name;
            return test_student;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 student_code
        {
            get
            {
                return _student_code;
            }
            set
            {
                if (_student_code != value)
                {
                    Onstudent_codeChanging(value);
                    ReportPropertyChanging("student_code");
                    _student_code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("student_code");
                    Onstudent_codeChanged();
                }
            }
        }
        private global::System.Int32 _student_code;
        partial void Onstudent_codeChanging(global::System.Int32 value);
        partial void Onstudent_codeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String student_name
        {
            get
            {
                return _student_name;
            }
            set
            {
                Onstudent_nameChanging(value);
                ReportPropertyChanging("student_name");
                _student_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("student_name");
                Onstudent_nameChanged();
            }
        }
        private global::System.String _student_name;
        partial void Onstudent_nameChanging(global::System.String value);
        partial void Onstudent_nameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "fk_test_score_student", "test_score")]
        public EntityCollection<test_score> test_score
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<test_score>("TestModel.fk_test_score_student", "test_score");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<test_score>("TestModel.fk_test_score_student", "test_score", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="test_sub")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class test_sub : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 test_sub 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static test_sub Createtest_sub(global::System.Int32 id)
        {
            test_sub test_sub = new test_sub();
            test_sub.id = id;
            return test_sub;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> main_id
        {
            get
            {
                return _main_id;
            }
            set
            {
                Onmain_idChanging(value);
                ReportPropertyChanging("main_id");
                _main_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("main_id");
                Onmain_idChanged();
            }
        }
        private Nullable<global::System.Int32> _main_id;
        partial void Onmain_idChanging(Nullable<global::System.Int32> value);
        partial void Onmain_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "fk_test_sub", "test_main")]
        public test_main test_main
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_main>("TestModel.fk_test_sub", "test_main").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_main>("TestModel.fk_test_sub", "test_main").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<test_main> test_mainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_main>("TestModel.fk_test_sub", "test_main");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<test_main>("TestModel.fk_test_sub", "test_main", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="test_sub_of_sub")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class test_sub_of_sub : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 test_sub_of_sub 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static test_sub_of_sub Createtest_sub_of_sub(global::System.Int32 id)
        {
            test_sub_of_sub test_sub_of_sub = new test_sub_of_sub();
            test_sub_of_sub.id = id;
            return test_sub_of_sub;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> sub_main_id
        {
            get
            {
                return _sub_main_id;
            }
            set
            {
                Onsub_main_idChanging(value);
                ReportPropertyChanging("sub_main_id");
                _sub_main_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sub_main_id");
                Onsub_main_idChanged();
            }
        }
        private Nullable<global::System.Int32> _sub_main_id;
        partial void Onsub_main_idChanging(Nullable<global::System.Int32> value);
        partial void Onsub_main_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "fk_test_sub_of_sub", "test_sub_s")]
        public test_sub_s test_sub_s
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_sub_s>("TestModel.fk_test_sub_of_sub", "test_sub_s").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_sub_s>("TestModel.fk_test_sub_of_sub", "test_sub_s").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<test_sub_s> test_sub_sReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_sub_s>("TestModel.fk_test_sub_of_sub", "test_sub_s");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<test_sub_s>("TestModel.fk_test_sub_of_sub", "test_sub_s", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="test_sub_s")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class test_sub_s : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 test_sub_s 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static test_sub_s Createtest_sub_s(global::System.Int32 id)
        {
            test_sub_s test_sub_s = new test_sub_s();
            test_sub_s.id = id;
            return test_sub_s;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> main_id
        {
            get
            {
                return _main_id;
            }
            set
            {
                Onmain_idChanging(value);
                ReportPropertyChanging("main_id");
                _main_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("main_id");
                Onmain_idChanged();
            }
        }
        private Nullable<global::System.Int32> _main_id;
        partial void Onmain_idChanging(Nullable<global::System.Int32> value);
        partial void Onmain_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "fk_test_sub_s", "test_main")]
        public test_main test_main
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_main>("TestModel.fk_test_sub_s", "test_main").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_main>("TestModel.fk_test_sub_s", "test_main").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<test_main> test_mainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test_main>("TestModel.fk_test_sub_s", "test_main");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<test_main>("TestModel.fk_test_sub_s", "test_main", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "fk_test_sub_of_sub", "test_sub_of_sub")]
        public EntityCollection<test_sub_of_sub> test_sub_of_sub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<test_sub_of_sub>("TestModel.fk_test_sub_of_sub", "test_sub_of_sub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<test_sub_of_sub>("TestModel.fk_test_sub_of_sub", "test_sub_of_sub", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="test_tab")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class test_tab : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 test_tab 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static test_tab Createtest_tab(global::System.Int32 id)
        {
            test_tab test_tab = new test_tab();
            test_tab.id = id;
            return test_tab;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value1
        {
            get
            {
                return _value1;
            }
            set
            {
                Onvalue1Changing(value);
                ReportPropertyChanging("value1");
                _value1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value1");
                Onvalue1Changed();
            }
        }
        private global::System.String _value1;
        partial void Onvalue1Changing(global::System.String value);
        partial void Onvalue1Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value2
        {
            get
            {
                return _value2;
            }
            set
            {
                Onvalue2Changing(value);
                ReportPropertyChanging("value2");
                _value2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value2");
                Onvalue2Changed();
            }
        }
        private global::System.String _value2;
        partial void Onvalue2Changing(global::System.String value);
        partial void Onvalue2Changed();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="testprocresult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class testprocresult : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 testprocresult 对象。
        /// </summary>
        /// <param name="a">A 属性的初始值。</param>
        /// <param name="b">B 属性的初始值。</param>
        public static testprocresult Createtestprocresult(global::System.String a, global::System.String b)
        {
            testprocresult testprocresult = new testprocresult();
            testprocresult.A = a;
            testprocresult.B = b;
            return testprocresult;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String A
        {
            get
            {
                return _A;
            }
            set
            {
                if (_A != value)
                {
                    OnAChanging(value);
                    ReportPropertyChanging("A");
                    _A = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("A");
                    OnAChanged();
                }
            }
        }
        private global::System.String _A;
        partial void OnAChanging(global::System.String value);
        partial void OnAChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String B
        {
            get
            {
                return _B;
            }
            set
            {
                if (_B != value)
                {
                    OnBChanging(value);
                    ReportPropertyChanging("B");
                    _B = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("B");
                    OnBChanged();
                }
            }
        }
        private global::System.String _B;
        partial void OnBChanging(global::System.String value);
        partial void OnBChanged();

        #endregion

    
    }

    #endregion

    
}
