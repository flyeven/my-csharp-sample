//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3615
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsCEEA945D5A4C252EB7D5B64D7F7BBC13))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// 此类型包含在设计时生成的 EntitySet 和 AssociationSet 的视图。
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsCEEA945D5A4C252EB7D5B64D7F7BBC13 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// 构造函数为盘区以及基于元数据和映射结束参数及视图生成的哈希值存储视图
        /// </Summary>
        public ViewsForBaseEntitySetsCEEA945D5A4C252EB7D5B64D7F7BBC13()
        {
            this.EdmEntityContainerName = "TestContext";
            this.StoreEntityContainerName = "A0600_EFSampleStoreContainer";
            this.HashOverMappingClosure = "e534b99179e3b663c4cef4e932cbd5d2";
            this.HashOverAllExtentViews = "8d3dfe6fe7c2c47cba7b33603b092f19";
            this.ViewCount = 5;
        }
        
        // 此方法返回给定索引的视图。
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                // 返回 A0600_EFSampleStoreContainer.test_main 的视图
                return new System.Collections.Generic.KeyValuePair<string, string>("A0600_EFSampleStoreContainer.test_main", @"
    SELECT VALUE -- Constructing test_main
        [A0600_EF.Sample.Store].test_main(T1.[test_main.id], T1.[test_main.value])
    FROM (
        SELECT 
            T.id AS [test_main.id], 
            T.[value] AS [test_main.value], 
            True AS _from0
        FROM TestContext.test_main AS T
    ) AS T1");
            }
            else
            {
                if ((index == 1))
                {
                    // 返回 A0600_EFSampleStoreContainer.test_sub 的视图
                    return new System.Collections.Generic.KeyValuePair<string, string>("A0600_EFSampleStoreContainer.test_sub", @"
    SELECT VALUE -- Constructing test_sub
        [A0600_EF.Sample.Store].test_sub(T3.[test_sub.id], T3.[test_sub.main_id], T3.[test_sub.value])
    FROM (
        SELECT T1.[test_sub.id], T2.[test_sub.main_id], T1.[test_sub.value], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.id AS [test_sub.id], 
                T.[value] AS [test_sub.value], 
                True AS _from0
            FROM TestContext.test_sub AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.test_sub).id AS [test_sub.id], 
                Key(T.test_main).id AS [test_sub.main_id], 
                True AS _from1
            FROM TestContext.main_id_cons AS T) AS T2
            ON T1.[test_sub.id] = T2.[test_sub.id]
    ) AS T3");
                }
                else
                {
                    if ((index == 2))
                    {
                        // 返回 TestContext.test_main 的视图
                        return new System.Collections.Generic.KeyValuePair<string, string>("TestContext.test_main", @"
    SELECT VALUE -- Constructing test_main
        [A0600_EF.Sample].test_main(T1.[test_main.id], T1.[test_main.value])
    FROM (
        SELECT 
            T.id AS [test_main.id], 
            T.[value] AS [test_main.value], 
            True AS _from0
        FROM A0600_EFSampleStoreContainer.test_main AS T
    ) AS T1");
                    }
                    else
                    {
                        if ((index == 3))
                        {
                            // 返回 TestContext.test_sub 的视图
                            return new System.Collections.Generic.KeyValuePair<string, string>("TestContext.test_sub", @"
    SELECT VALUE -- Constructing test_sub
        [A0600_EF.Sample].test_sub(T1.[test_sub.id], T1.[test_sub.value]) WITH 
        RELATIONSHIP(CREATEREF(TestContext.test_main, ROW(T1.[main_id_cons.test_main.id]),[A0600_EF.Sample].test_main),[A0600_EF.Sample].main_id_cons,test_sub,test_main) 
    FROM (
        SELECT 
            T.id AS [test_sub.id], 
            T.[value] AS [test_sub.value], 
            True AS _from0, 
            T.main_id AS [main_id_cons.test_main.id]
        FROM A0600_EFSampleStoreContainer.test_sub AS T
    ) AS T1");
                        }
                        else
                        {
                            if ((index == 4))
                            {
                                // 返回 TestContext.main_id_cons 的视图
                                return new System.Collections.Generic.KeyValuePair<string, string>("TestContext.main_id_cons", @"
    SELECT VALUE -- Constructing main_id_cons
        [A0600_EF.Sample].main_id_cons(T3.[main_id_cons.test_main], T3.[main_id_cons.test_sub])
    FROM (
        SELECT -- Constructing test_main
            CreateRef(TestContext.test_main, row(T2.[main_id_cons.test_main.id]),[A0600_EF.Sample].test_main) AS [main_id_cons.test_main], 
            T2.[main_id_cons.test_sub]
        FROM (
            SELECT -- Constructing test_sub
                CreateRef(TestContext.test_sub, row(T1.[main_id_cons.test_sub.id]),[A0600_EF.Sample].test_sub) AS [main_id_cons.test_sub], 
                T1.[main_id_cons.test_main.id]
            FROM (
                SELECT 
                    T.main_id AS [main_id_cons.test_main.id], 
                    T.id AS [main_id_cons.test_sub.id], 
                    True AS _from0
                FROM A0600_EFSampleStoreContainer.test_sub AS T
                WHERE T.main_id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
                            }
                        }
                    }
                }
            }
            throw new System.IndexOutOfRangeException();
        }
    }
}
