本项目是“适配器”模式的 例子代码


适配器由三部分组成。


1、目标（Target）角色
这是客户所期待的接口。因为C#不支持多继承，所以Target必须是接口，不可以是类。


2、源（Adaptee）角色：
需要适配的类。


3、适配器（Adapter）角色
把源接口转换成目标接口。这一角色必须是类。





在什么情况下使用适配器模式
在以下各种情况下使用适配器模式：

1、 系统需要使用现有的类，而此类的接口不符合系统的需要。


2、 想要建立一个可以重复使用的类，
用于与一些彼此之间没有太大关联的一些类，包括一些可能在将来引进的类一起工作。
这些源类不一定有很复杂的接口。


3、 （对对象适配器而言）在设计里，需要改变多个已有子类的接口，
如果使用类的适配器模式，就要针对每一个子类做一个适配器，而这不太实际。





Adapter模式在实现时有以下这些值得注意的地方：

1、 目标接口可以省略，模式发生退化。但这种做法看似平庸而并不平庸，它可以使Adaptee不必实现不需要的方法
（可以参考Default Adapter模式）。其表现形式就是父类实现缺省方法，而子类只需实现自己独特的方法。
这有些像模板（Template）模式。

2、 适配器类可以是抽象类。

3、 带参数的适配器模式。使用这种办法，适配器类可以根据参数返还一个合适的实例给客户端。

